{"version":3,"sources":["assets/images/clocks.jpg","assets/images/dictionary.jpg","components/layout-component/index.js","components/loader-component/index.js","action-types.js","helpers/api-urls.js","modules/dictionary/actions/dictionary-actions.js","helpers/cache-manager.js","helpers/constants.js","helpers/index.js","shared-components/RenderHtmlContent/index.js","shared-components/CustomModal/index.js","modules/dictionary/components/dictionary-component/saved-search-component/index.js","shared-components/SpeakComponent/index.js","modules/dictionary/components/dictionary-component/search-result-component/index.js","modules/dictionary/components/dictionary-component/index.js","modules/dictionary/containers/dictionary.container.js","modules/home/actions/home-actions.js","modules/home/components/home-component/index.js","modules/home/containers/home.container.js","modules/info/index.js","modules/timezone-monitor/actions/timezone-actions.js","shared-components/Select/index.js","modules/timezone-monitor/components/timezone-component/hour-list-component/index.js","modules/timezone-monitor/components/timezone-component/select-time-zone-component/index.js","modules/timezone-monitor/components/timezone-component/selected-watches-component/index.js","modules/timezone-monitor/components/timezone-component/index.js","modules/timezone-monitor/containers/timezone.container.js","app.routes.js","App.js","app.container.js","helpers/common.actions.js","helpers/interceptor.js","global/config.js","helpers/common.reducer.js","modules/dictionary/reducers/dictionary.reducer.js","modules/home/reducers/home.reducer.js","modules/timezone-monitor/reducers/timezone.reducer.js","root-reducer.js","translations.js","assets/i18n/en.js","store.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","width","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","AppLayout","classes","React","useState","open","setOpen","AppBar","className","clsx","Toolbar","IconButton","edge","color","aria-label","onClick","Typography","component","variant","noWrap","to","backdrop","CustomerLoader","Backdrop","CircularProgress","Urls","addQueryParameters","url","params","queryList","Object","keys","forEach","k","push","encodeURIComponent","prefixCharacter","indexOf","join","replaceParams","replace","callAPI","method","postData","cb","axios","then","res","data","err","searchTerm","dispatch","queryParam","paramReplacements","API_URL","process","REACT_APP_API_URL","buildURL","searchWord","resp","type","CacheManager","isStringyfied","txt","JSON","parse","e","getItem","key","defaultValue","val","window","localStorage","setItem","value","stringify","removeItem","clear","DEFAULT_TIMEZONE_LIST","ManageSearchResult","result","savedSearches","existingIndex","lodash","itm","timeStamp","Date","length","shift","splice","displayTimeZone","timeZone","timeZoneSplit","split","RenderHtmlContent","props","this","toString","trim","dangerouslySetInnerHTML","__html","Component","CustomModal","handleClose","evt","handleModalClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","message","DialogActions","Button","autoFocus","SavedSearchListComponent","flexWrap","margin","loadSavedSearches","setState","handleDelete","preventDefault","selected","showDeletePopup","handleDeleteModalClose","state","showCurrentTerm","handleShowSelectedResult","prev","newSearchAdded","currentId","Chip","label","onDelete","RenderSpeakComponent","speak","msg","SpeechSynthesisUtterance","speechSynthesis","SearchResultComponent","getImageURL","searchResult","Images","windowWidth","innerWidth","handleChange","index","isExpanded","imageURL","imgUrl","firstElement","Card","CardHeader","action","disabled","Word","subheader","Pronunciation","src","CardContent","Definitions","definition","example","indx","Accordion","expanded","AccordionSummary","expandIcon","aria-controls","AccordionDetails","DictionaryComponent","handleTextChange","target","handleSearchTerm","errorMsg","history","handleSearchIconClick","getFromCache","definitions","pronunciation","word","getImage","newSearchWordAdded","noRecordFound","getImg","meta","status","small","medium","large","handleNoRecordFound","nextId","nextProps","prevId","match","Grid","item","xs","md","lg","TextField","placeholder","fullWidth","InputLabelProps","shrink","onKeyPress","onChange","InputProps","endAdornment","InputAdornment","withRouter","connect","dictionaryReducer","DictionaryActions","HomeComponent","CardActionArea","CardMedia","image","DictionaryImage","gutterBottom","CardActions","size","ClockImage","homeReducer","HomeActions","marginBottom","media","expand","transform","marginLeft","shortest","expandOpen","avatar","backgroundColor","red","InfoComponent","Avatar","href","list","payload","RenderSelect","name","FormControl","InputLabel","htmlFor","Select","labelId","required","native","input","Input","map","HourListComponent","populateMasterData","hourOptions","i","minOptions","amPMOptions","addedTimeZones","timezoneOptions","checkValidSelection","timezone","selectedTime","isValidSelection","event","hour","minute","am","handleSelectTime","TODAY","hour24","parseInt","selectedDateTime","moment","tz","getFullYear","getMonth","getDate","toUpperCase","handleCancel","handleOpenTimePopup","displaySelectedTimeInGivenTimeZone","currentTimeZone","clone","format","selectedTimeZonesChanged","disableBackdropClick","disableEscapeKeyDown","startIcon","SelectTimeZoneComponent","intervalTimer","fillPreSelectTimeZones","handleAddWatches","setSelectedTimeZones","handleAddWatchesCancel","handleSearchTimeZone","toLowerCase","doSearch","filteredTimeZones","timezoneNames","filteredZones","handleToggle","currentIndex","newaddedTimeZones","momentTz","names","fullScreen","onKeyUp","helperText","List","ListItem","role","undefined","dense","button","ListItemIcon","Checkbox","checked","tabIndex","disableRipple","inputProps","ListItemText","primary","ListItemSecondaryAction","WatchListComponent","displaySelectedTimes","timeZoneList","zone","zoneName","timeStampDate","selectedWatches","initializeInterval","clearInterval","setInterval","handleOpenSetting","openTimezonePopup","Paper","elevation","TimezoneMonitorComponent","SelectedTimeZones","timezoneReducer","TimeZoneActions","AppRoutes","Switch","CssBaseline","fallback","exact","path","TimezoneComponent","App","loading","commonReducer","flag","SilentRequestURLs","IgnoreResponseInterceptorForThisList","isSilentAPICall","currentRequests","setupInterceptors","store","interceptors","request","use","config","commonActions","Promise","resolve","reject","headers","Authorization","response","isIgnoreURL","updateData","error","all","env","isDev","basename","PUBLIC_PATH","isBrowser","test","development","production","merge","initialState","reducers","i18nReducer","form","combineReducers","translations","text","devtools","devToolsExtension","fn","dictionaries","languages","code","enhancers","createStore","reducer","compose","i18nActions","setDictionaries","setLanguages","setCurrentLanguage","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b411bac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clocks.7bafc0c6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dictionary.687573a1.jpg\";","import AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst drawerWidth = 0;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\n\r\nexport default function AppLayout() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\" onClick={handleDrawerOpen} className={clsx(classes.menuButton, open && classes.menuButtonHidden)}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                        <Link to={'/'} className=\"white-link\"><IconButton color=\"inherit\"><HomeIcon /></IconButton></Link>\r\n                        <Link to={'/dictionary/search'} className=\"white-link\" title=\"Dictionary\"><IconButton color=\"inherit\"><LocalLibraryIcon /></IconButton></Link>\r\n                        <Link to={'/time-zone-monitor'} className=\"white-link\" title=\"Time zone monitor\"><IconButton color=\"inherit\"><ScheduleIcon /></IconButton></Link>\r\n                    </Typography>\r\n\r\n                    <Link to={'/info'} className=\"white-link\"><IconButton color=\"inherit\"><InfoIcon /></IconButton></Link>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}\r\n","import Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from \"react\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nexport default function CustomerLoader() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"loader\">\r\n            <Backdrop className={classes.backdrop} open={true}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n}\r\n\r\n","export const SET_LOADER = \"SET_LOADER\";\r\nexport const SET_SEARCH_WORD = \"SET_SEARCH_WORD\";\r\nexport const NEW_SEARCH_ADDED = \"NEW_SEARCH_ADDED\";\r\nexport const SELECTED_TIMEZONES_CHANGED = \"SELECTED_TIMEZONES_CHANGED\";\r\n","import axios from \"axios\";\r\n\r\nexport const Urls = {\r\n  SearchWord: \"/dictionary/:searchWord\"\r\n};\r\n\r\nexport const buildURL = (url, queryParam, paramReplacements) => {\r\n  let API_URL = process.env.REACT_APP_API_URL;\r\n  API_URL = API_URL || 'https://owlbot.info/api/v4';\r\n\r\n  if (queryParam) {\r\n    url = addQueryParameters(url, queryParam);\r\n  }\r\n\r\n  if (paramReplacements) {\r\n    url = replaceParams(url, paramReplacements);\r\n  }\r\n\r\n  return API_URL + url;\r\n};\r\n\r\nconst addQueryParameters = (url, params) => {\r\n  const queryList = [];\r\n  Object.keys(params).forEach(k => {\r\n    queryList.push(`${k}=${encodeURIComponent(params[k])}`);\r\n  });\r\n\r\n  const prefixCharacter = url.indexOf(\"?\") === -1 ? \"?\" : \"&\";\r\n\r\n  return `${url + prefixCharacter + queryList.join(\"&\")}`;\r\n};\r\n\r\nconst replaceParams = (url, params) => {\r\n  Object.keys(params).forEach(k => {\r\n    url = url.replace(`:${k}`, encodeURIComponent(params[k]));\r\n  });\r\n  return url;\r\n};\r\n\r\nexport const callAPI = (url, method, postData, cb) => {\r\n  method = method || \"get\";\r\n  axios[method](url, postData).then(\r\n    res => {\r\n      cb && cb(res.data);\r\n    },\r\n    err => {\r\n      cb && cb(null);\r\n    }\r\n  );\r\n};\r\n\r\nexport const downloadFile = (url, fileName, method, postData) => {\r\n  axios.request({ url, method: method || 'get', data: postData, responseType: 'blob' })\r\n    .then(({ data }) => {\r\n      let a = document.createElement(\"a\");\r\n      let file = new Blob([data]);\r\n      let fileURL = window.URL.createObjectURL(file);\r\n      document.body.appendChild(a);\r\n      a.style = \"display: none\";\r\n      a.href = fileURL;\r\n      a.download = `${fileName}`;\r\n      a.click();\r\n    });\r\n};\r\n\r\nconst exportToExcel = (tableHTMLData, fileName) => {\r\n  let downloadurl;\r\n  downloadurl = document.createElement(\"a\");\r\n  document.body.appendChild(downloadurl);\r\n\r\n  let file = new Blob([tableHTMLData], { type: 'application/vnd.ms-excel' });\r\n  let fileURL = window.URL.createObjectURL(file);\r\n  let a = document.createElement(\"a\");\r\n\r\n  document.body.appendChild(a);\r\n  a.style = \"display: none\";\r\n  a.href = fileURL;\r\n  a.download = `${fileName}.xlsx`;\r\n  a.click();\r\n}\r\n\r\nexport const downloadExcelReport = (url, fileName) => {\r\n  axios.request({ url, method: 'get', responseType: 'blob' })\r\n    .then(({ data }) => {\r\n      exportToExcel(data, fileName);\r\n    });\r\n};\r\n","import * as types from '../../../action-types';\r\nimport { buildURL, callAPI, Urls } from \"../../../helpers/api-urls\";\r\nconst searchWord = (searchTerm, cb, dispatch) => {\r\n  const url = buildURL(Urls.SearchWord, null, { searchWord: searchTerm });\r\n  callAPI(url, 'get', null, (resp) => {\r\n    if (resp) {\r\n      cb && cb(resp);\r\n      return;\r\n    }\r\n\r\n    cb && cb(null);\r\n\r\n  });\r\n};\r\n\r\nconst getImg = (searchTerm, cb) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=6WqMHFLsRcNdxStZAeWTAKDITe7ELdLv&q=${searchTerm}&limit=25&offset=0&rating=g&lang=en`;\r\n  callAPI(url, 'get', null, (resp) => {\r\n    if (resp) {\r\n      cb && cb(resp);\r\n      return;\r\n    }\r\n    cb && cb(null);\r\n  });\r\n};\r\n\r\nconst newSearchWordAdded = (dispatch) => {\r\n  dispatch({ type: types.NEW_SEARCH_ADDED })\r\n}\r\n\r\nexport default {\r\n  searchWord,\r\n  newSearchWordAdded,\r\n  getImg\r\n};\r\n","const keyPrefix = \"idict_\";\r\n\r\nconst CacheManager = {\r\n  isStringyfied: txt => {\r\n    try {\r\n      JSON.parse(txt);\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  },\r\n  getItem: (key, defaultValue) => {\r\n    key = `${keyPrefix}${key}`;\r\n    const val = window.localStorage.getItem(key);\r\n    if (val) {\r\n      return JSON.parse(val);\r\n    }\r\n\r\n    return defaultValue || null;\r\n  },\r\n  setItem: (key, value) => {\r\n    key = `${keyPrefix}${key}`;\r\n\r\n    if (!CacheManager.isStringyfied(value)) {\r\n      value = JSON.stringify(value);\r\n    }\r\n\r\n    window.localStorage.setItem(key, value);\r\n  },\r\n  removeItem: key => {\r\n    key = `${keyPrefix}${key}`;\r\n    window.localStorage.removeItem(key);\r\n  },\r\n  clear: () => {\r\n    window.localStorage.clear();\r\n  }\r\n};\r\n\r\nexport default CacheManager;\r\n","export const ID_TOKEN = 'adal.idtoken';\r\nexport const DATE_FORMAT = \"MM/DD/YYYY\";\r\nexport const SAVED_SEARCH = 'saved_search';\r\nexport const SELECTED_TIMEZONE = 'selected_timezones';\r\nexport const DEFAULT_TIMEZONE_LIST = ['Asia/Calcutta', 'America/New_York', 'Europe/London']\r\nexport const MAX_CACHED_ITEMS = 20;\r\n","import * as lodash from 'lodash';\r\nimport moment from \"moment\";\r\nimport CacheManager from './cache-manager';\r\nimport { DATE_FORMAT, MAX_CACHED_ITEMS, SAVED_SEARCH } from './constants';\r\nexport const splitPascalString = str => {\r\n  return (str || \"\").replace(/([a-z0-9])([A-Z])/g, \"$1 $2\");\r\n};\r\n\r\nexport const formattedDate = (dt, format) => {\r\n  if (!dt) {\r\n    return \"\";\r\n  }\r\n\r\n  format = format || DATE_FORMAT;\r\n  return moment(dt).format(format);\r\n};\r\n\r\n\r\nexport const slugify = (text) => {\r\n  return (text || '')\r\n    .toString()                     // Cast to string\r\n    .toLowerCase()                  // Convert the string to lowercase letters\r\n    .trim()                         // Remove whitespace from both sides of a string\r\n    .replace(/\\s+/g, '-')           // Replace spaces with -\r\n    .replace(/\\//g, '-')           // Replace / with -\r\n    .replace(/&/g, '-and-')           // Replace & with 'and'\r\n    .replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\r\n    .replace(/\\-\\-+/g, '-')      // Replace multiple - with single -\r\n    .replace(/^-+/, \"\") // trim - from start of text\r\n    .replace(/-+$/, \"\") // trim - from end of text\r\n}\r\n\r\nexport const copyToClipboard = (copyText, cb) => {\r\n  copyToClip(copyText);\r\n  cb(true);\r\n}\r\n\r\nconst copyToClip = (str) => {\r\n  function listener(e) {\r\n    e.clipboardData.setData(\"text/html\", str);\r\n    e.clipboardData.setData(\"text/plain\", str);\r\n    e.preventDefault();\r\n  }\r\n  document.addEventListener(\"copy\", listener);\r\n  document.execCommand(\"copy\");\r\n  document.removeEventListener(\"copy\", listener);\r\n};\r\n\r\n\r\nexport const ManageSearchResult = {\r\n  add: (searchTerm, result) => {\r\n    const savedSearches = CacheManager.getItem(SAVED_SEARCH, []);\r\n    const existingIndex = lodash.findIndex(savedSearches, itm => itm.key === searchTerm);\r\n\r\n    const content = {\r\n      key: searchTerm,\r\n      result: result,\r\n      timeStamp: new Date()\r\n    };\r\n\r\n    if (existingIndex === -1) {\r\n      if ((savedSearches || []).length >= MAX_CACHED_ITEMS) {\r\n        savedSearches.shift();\r\n      }\r\n      savedSearches.push(content);\r\n    }\r\n    else {\r\n      savedSearches[existingIndex] = content;\r\n    }\r\n\r\n    CacheManager.setItem(SAVED_SEARCH, savedSearches);\r\n  },\r\n  remove: (searchTerm) => {\r\n    const savedSearches = CacheManager.getItem(SAVED_SEARCH, []);\r\n    const existingIndex = lodash.findIndex(savedSearches, itm => itm.key === searchTerm);\r\n    if (existingIndex > -1) {\r\n      savedSearches.splice(existingIndex, 1);\r\n      CacheManager.setItem(SAVED_SEARCH, savedSearches);\r\n    }\r\n  },\r\n  get: (searchTerm) => {\r\n    const savedSearches = CacheManager.getItem(SAVED_SEARCH, []);\r\n    const existingIndex = lodash.findIndex(savedSearches, itm => itm.key === searchTerm);\r\n    if (existingIndex > -1) {\r\n      return savedSearches[existingIndex];\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport const displayTimeZone = (timeZone) => {\r\n  const timeZoneSplit = timeZone.split('/');\r\n  if (timeZoneSplit.length == 2) {\r\n    if (timeZoneSplit[1] === 'Calcutta') {\r\n      return 'India';\r\n    }\r\n\r\n    return (timeZoneSplit[1] || '').replace('_', ' ');\r\n  }\r\n  return timeZone;\r\n}\r\n","import React, { Component } from \"react\";\r\nclass RenderHtmlContent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let { content } = this.props;\r\n        content = (content || '').toString().trim();\r\n        return <>\r\n            <span className=\"html-content-view\" dangerouslySetInnerHTML={{ __html: content }} ></span>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default RenderHtmlContent;\r\n","import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport React from 'react';\r\nimport RenderHtmlContent from '../RenderHtmlContent/index';\r\n\r\nexport default function CustomModal(props) {\r\n    const handleClose = (evt) => {\r\n        const { handleModalClose } = props;\r\n        handleModalClose && handleModalClose(evt);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={true}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <RenderHtmlContent content={props.message} />\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {/* <Button onClick={handleClose} color=\"primary\">No</Button> */}\r\n                    <Button onClick={(evt) => handleClose(1)} color=\"primary\" autoFocus>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import Chip from '@material-ui/core/Chip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ManageSearchResult } from 'helpers';\r\nimport CacheManager from 'helpers/cache-manager';\r\nimport { SAVED_SEARCH } from 'helpers/constants';\r\nimport * as lodash from 'lodash';\r\nimport React from 'react';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(0.5),\r\n        },\r\n    },\r\n}));\r\n\r\nclass SavedSearchListComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            savedSearches: [],\r\n            showDeletePopup: false,\r\n            selected: null\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadSavedSearches();\r\n    }\r\n\r\n    componentDidUpdate(prev) {\r\n        if (prev.newSearchAdded !== this.props.newSearchAdded) {\r\n            this.loadSavedSearches();\r\n        }\r\n    }\r\n\r\n    loadSavedSearches = () => {\r\n        const savedSearches = CacheManager.getItem(SAVED_SEARCH);\r\n        if (savedSearches) {\r\n            this.setState({ savedSearches })\r\n        }\r\n    }\r\n\r\n    handleDelete = (evt, itm) => {\r\n        evt && evt.preventDefault();\r\n        this.setState({ selected: itm, showDeletePopup: true });\r\n    }\r\n\r\n    handleDeleteModalClose = (evt) => {\r\n        if (evt === 1) {\r\n            const { selected } = this.state;\r\n            ManageSearchResult.remove(selected.key);\r\n            this.loadSavedSearches();\r\n        }\r\n        this.setState({\r\n            showDeletePopup: false, selected: null\r\n        });\r\n    }\r\n\r\n    showCurrentTerm = (evt, itm) => {\r\n        evt && evt.preventDefault();\r\n        const { handleShowSelectedResult } = this.props;\r\n        handleShowSelectedResult && handleShowSelectedResult(itm);\r\n    }\r\n\r\n    handleDelete = (evt, itm) => {\r\n        evt && evt.preventDefault();\r\n        ManageSearchResult.remove(itm.key);\r\n        this.loadSavedSearches();\r\n    };\r\n\r\n    render() {\r\n        const classes = {}\r\n        const { savedSearches, showDeletePopup } = this.state;\r\n        const currentId = lodash.get(this.props, 'match.params.searchTerm', null);\r\n        return <>\r\n            <div className=\"saved-search-box\">\r\n                {lodash.map(savedSearches || [], itm =>\r\n                    <Chip\r\n                        key={`saved-${itm.key}`}\r\n                        className=\"saved-searches\"\r\n                        label={itm.key}\r\n                        color={currentId === itm.key ? `primary` : 'default'}\r\n                        onDelete={(evt) => { this.handleDelete(evt, itm) }}\r\n                        onClick={(evt) => { this.showCurrentTerm(evt, itm) }}\r\n                    />\r\n                )}\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default SavedSearchListComponent;\r\n\r\n\r\n","import RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\r\nimport React, { Component } from \"react\";\r\nclass RenderSpeakComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    speak = () => {\r\n        let { content } = this.props;\r\n        if (content) {\r\n            let msg = new SpeechSynthesisUtterance(content);\r\n            window.speechSynthesis.speak(msg);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!window.speechSynthesis) {\r\n            return ''\r\n        }\r\n\r\n        let { content } = this.props;\r\n        content = (content || '').toString().trim();\r\n        return <span title=\"Click to speak given word/phrase\">\r\n            <RecordVoiceOverIcon onClick={this.speak} />\r\n        </span>\r\n    }\r\n}\r\n\r\nexport default RenderSpeakComponent;\r\n","import Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport * as lodash from 'lodash';\r\nimport React from \"react\";\r\nimport RenderHtmlContent from 'shared-components/RenderHtmlContent';\r\nimport RenderSpeakComponent from 'shared-components/SpeakComponent';\r\n\r\nclass SearchResultComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            imageURL: null\r\n        }\r\n    }\r\n\r\n    getImageURL = () => {\r\n        const { searchResult } = this.props;\r\n        if (searchResult && searchResult.Images) {\r\n            const windowWidth = window.innerWidth;\r\n            if (windowWidth < 418) {\r\n                return lodash.get(searchResult.Images, 'small', null);\r\n            }\r\n            else if (windowWidth > 418 && windowWidth < 750) {\r\n                return lodash.get(searchResult.Images, 'medium', null);\r\n            }\r\n\r\n            return lodash.get(searchResult.Images, 'large', null);\r\n        }\r\n        return ''\r\n    }\r\n\r\n    handleChange = (evt, index) => {\r\n        evt && evt.preventDefault();\r\n        this.setState({ isExpanded: this.state.isExpanded === `panel${index}` ? null : `panel${index}` });\r\n    };\r\n\r\n    render() {\r\n        const { searchResult } = this.props;\r\n        const { isExpanded } = this.state;\r\n        const classes = {};\r\n        const imgUrl = this.getImageURL();\r\n        const windowWidth = window.innerWidth;\r\n\r\n        if (!searchResult) {\r\n            return '';\r\n        }\r\n\r\n        const firstElement = lodash.get(searchResult, 'Definitions[0]', null);\r\n        return <>\r\n            {firstElement && <Card className={classes.root}>\r\n                <CardHeader\r\n                    action={lodash.get(searchResult, 'Definitions[0].type', '') && <Chip label={lodash.get(searchResult, 'Definitions[0].type', '')} disabled />}\r\n                    title={\r\n                        <>\r\n                            {searchResult.Word}\r\n                            <span className=\"speak-box\"> <RenderSpeakComponent content={searchResult.Word} /></span>\r\n                        </>\r\n                    }\r\n                    subheader={searchResult.Pronunciation}\r\n                />\r\n\r\n                {imgUrl && <div className=\"search-result-image\" title={searchResult.Word}>\r\n                    <img src={imgUrl} key={`img_${searchResult.Word}`} />\r\n                </div>\r\n                }\r\n\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        <span className=\"sub-definition\">\r\n                            <p className=\"sub-info-1\">\r\n                                <span className=\"speak-box\"> <RenderSpeakComponent content={lodash.get(searchResult, 'Definitions[0].definition', '')} /></span>\r\n                                <RenderHtmlContent content={searchResult?.Definitions[0].definition} />\r\n                            </p>\r\n\r\n                        </span>\r\n                        {searchResult?.Definitions[0].example &&\r\n                            <>\r\n                                <div className=\"example-text\">\r\n                                    <span className=\"speak-box\"> <RenderSpeakComponent content={searchResult?.Definitions[0].example} /></span>\r\n                                    <RenderHtmlContent content={`\"${searchResult?.Definitions[0].example}\"`} />\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            }\r\n\r\n            <br />\r\n            {lodash.map(searchResult?.Definitions || [], (itm, indx) => {\r\n                return indx > 0 &&\r\n                    <>\r\n                        <Accordion expanded={isExpanded === `panel${indx}`}>\r\n                            <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={`panel${indx}bh-content`}\r\n                                id={`panel${indx}bh-header`}\r\n                                onClick={(evt) => { this.handleChange(evt, indx) }}\r\n                            >\r\n                                <Chip label={itm.type} disabled />\r\n\r\n                                {windowWidth > 418 && isExpanded !== `panel${indx}` && <>\r\n                                    <p className=\"sub-info\">\r\n                                        <RenderHtmlContent content={itm.definition} />\r\n                                    </p>\r\n                                </>\r\n                                }\r\n\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                                <Typography>\r\n                                    <div className=\"sub-definition\">\r\n                                        <span className=\"speak-box\"> <RenderSpeakComponent content={itm.definition} /></span>\r\n                                        <RenderHtmlContent content={itm.definition} />\r\n                                    </div>\r\n\r\n                                    <div className=\"example-text\">\r\n                                        <span className=\"speak-box\"> <RenderSpeakComponent content={itm.example} /></span>\r\n                                        <RenderHtmlContent content={`\"${itm.example}\"`} />\r\n                                    </div>\r\n                                </Typography>\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n\r\n                    </>\r\n            })}\r\n        </>\r\n    }\r\n}\r\n\r\nexport default SearchResultComponent;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { ManageSearchResult } from 'helpers';\r\nimport * as lodash from 'lodash';\r\nimport React from \"react\";\r\nimport CustomModal from 'shared-components/CustomModal';\r\nimport SavedSearchListComponent from './saved-search-component/index';\r\nimport SearchResultComponent from './search-result-component/index';\r\nclass DictionaryComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            searchResult: null,\r\n            errorMsg: '',\r\n            noRecordFound: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const nextId = lodash.get(this.props, 'match.params.searchTerm', null);\r\n        if (nextId) {\r\n            this.searchWord(nextId);\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        const { match } = this.props;\r\n        const prevId = match.params.searchTerm;\r\n        const nextId = nextProps.match.params.searchTerm;\r\n        if (nextId && prevId !== nextId) {\r\n            this.searchWord(nextId);\r\n        }\r\n    }\r\n\r\n    handleTextChange = (evt) => {\r\n        this.setState({ value: evt.target.value });\r\n    }\r\n\r\n    handleSearchTerm = (evt) => {\r\n        if (evt.key === 'Enter') {\r\n            this.setState({ errorMsg: '' })\r\n            const searchTerm = evt.target.value;\r\n            this.props.history.push(`/dictionary/search/${searchTerm}`)\r\n        }\r\n    }\r\n\r\n    handleSearchIconClick = (evt) => {\r\n        evt && evt.preventDefault();\r\n        const { value } = this.state;\r\n        this.props.history.push(`/dictionary/search/${value}`)\r\n        this.setState({ value: '' })\r\n    }\r\n\r\n    searchWord = (searchTerm) => {\r\n        const getFromCache = ManageSearchResult.get(searchTerm);\r\n        if (getFromCache) {\r\n            this.setState({ searchResult: getFromCache.result })\r\n            return;\r\n        }\r\n\r\n        this.props.searchWord(searchTerm, (resp) => {\r\n            if (!resp) {\r\n                this.setState({ errorMsg: 'No definition found for given word!!!', searchResult: null, noRecordFound: true })\r\n                return;\r\n            }\r\n\r\n            const content = {\r\n                Definitions: resp.definitions,\r\n                Pronunciation: resp.pronunciation,\r\n                Word: resp.word\r\n            };\r\n\r\n            this.setState({ searchResult: content }, () => {\r\n                this.getImage(searchTerm);\r\n            })\r\n            ManageSearchResult.add(searchTerm, content);\r\n            this.props.newSearchWordAdded();\r\n        });\r\n    }\r\n\r\n    getImage = (searchTerm) => {\r\n        this.props.getImg(searchTerm, (resp) => {\r\n            if (resp && resp.meta.status === 200) {\r\n                const Images = {\r\n                    small: lodash.get(resp, 'data[0].images.downsized.url', null),\r\n                    medium: lodash.get(resp, 'data[0].images.downsized_medium.url', null),\r\n                    large: lodash.get(resp, 'data[0].images.downsized_large.url', null),\r\n\r\n                }\r\n\r\n                const { searchResult } = this.state;\r\n                searchResult.Images = Images;\r\n                ManageSearchResult.add(searchTerm, searchResult);\r\n                this.props.newSearchWordAdded();\r\n            }\r\n        })\r\n    }\r\n\r\n    handleShowSelectedResult = ({ key, result }) => {\r\n        this.props.history.push(`/dictionary/search/${key}`)\r\n    }\r\n\r\n    handleNoRecordFound = () => {\r\n        this.setState({ noRecordFound: false });\r\n        this.props.history.push(`/dictionary/search`);\r\n    }\r\n\r\n    render() {\r\n        const { value, errorMsg, searchResult, noRecordFound } = this.state;\r\n        const classes = {};\r\n        return (\r\n            <>\r\n                {noRecordFound && <CustomModal title=\"No Definition Found\" message={`<span class='text-error'>No definition found with word: <b>${lodash.get(this.props, 'match.params.searchTerm', '')}</b></span>`} handleModalClose={this.handleNoRecordFound} />}\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} md={12} lg={12}>\r\n                        <div className=\"loader\">\r\n\r\n                            <TextField\r\n                                id=\"outlined-full-width\"\r\n                                label=\"Search\"\r\n                                placeholder=\"search word, for example: computers\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{ shrink: true, }}\r\n                                variant=\"outlined\"\r\n                                onKeyPress={this.handleSearchTerm}\r\n                                onChange={this.handleTextChange}\r\n                                value={value}\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"start\" >\r\n                                            <SearchIcon onClick={this.handleSearchIconClick} />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <SavedSearchListComponent {...this.props} handleShowSelectedResult={this.handleShowSelectedResult} />\r\n                        {searchResult && <SearchResultComponent {...this.props} searchResult={searchResult} />}\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default DictionaryComponent;\r\n","import { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport DictionaryActions from \"../actions/dictionary-actions\";\r\nimport DictionaryComponent from \"../components/dictionary-component/index\";\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchWord: state.dictionaryReducer.searchWord,\r\n    newSearchAdded: state.dictionaryReducer.newSearchAdded\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  searchWord: (searchWord, cb) => {\r\n    DictionaryActions.searchWord(searchWord, cb, dispatch);\r\n  },\r\n  newSearchWordAdded: () => {\r\n    DictionaryActions.newSearchWordAdded(dispatch);\r\n  },\r\n  getImg: (searchWord, cb) => {\r\n    DictionaryActions.getImg(searchWord, cb)\r\n  }\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DictionaryComponent));\r\n","import * as types from '../../../action-types';\r\n\r\nconst newSearchWordAdded = (dispatch) => {\r\n  dispatch({ type: types.NEW_SEARCH_ADDED })\r\n}\r\n\r\nexport default {\r\n  newSearchWordAdded\r\n};\r\n","import Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ClockImage from 'assets/images/clocks.jpg';\r\nimport DictionaryImage from 'assets/images/dictionary.jpg';\r\nimport React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass HomeComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            searchResult: null,\r\n            errorMsg: '',\r\n            noRecordFound: false\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const classes = {};\r\n        return (\r\n            <>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} md={6} lg={6}>\r\n                        <div className=\"home-cards\">\r\n                            <Link to={'/dictionary/search'} title=\"Dictionary\">\r\n                                <Card className={classes.root}>\r\n                                    <CardActionArea>\r\n                                        <CardMedia\r\n                                            className=\"home-card-img\"\r\n                                            image={DictionaryImage}\r\n                                            title=\"Dictionary\"\r\n                                        />\r\n                                        <CardContent>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">Dictionary with image and voice</Typography>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                Search in dictionary, save your favorite words. Displays image to understand quickly with voice handlers to hear definition.\r\n                                      </Typography>\r\n                                        </CardContent>\r\n                                    </CardActionArea>\r\n                                    <CardActions>\r\n                                        <Button size=\"small\" color=\"primary\">Explore</Button>\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Link>\r\n                        </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={6} lg={6}>\r\n                        <div className=\"home-cards\">\r\n                            <Link to={'/time-zone-monitor'} title=\"Time zone monitor\">\r\n                                <Card className={classes.root}>\r\n                                    <CardActionArea>\r\n                                        <CardMedia\r\n                                            className=\"home-card-img\"\r\n                                            image={ClockImage}\r\n                                            title=\"Multi zone clocks\"\r\n                                        />\r\n                                        <CardContent>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">Multi zone clocks</Typography>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                Display clocks of multiple geographical locations. Save your favorite locations. Calculate time at different timezone, etc.\r\n                                      </Typography>\r\n                                        </CardContent>\r\n                                    </CardActionArea>\r\n                                    <CardActions>\r\n                                        <Button size=\"small\" color=\"primary\">Explore</Button>\r\n\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Link>\r\n                        </div>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeComponent;\r\n","import { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport HomeActions from \"../actions/home-actions\";\r\nimport HomeComponent from \"../components/home-component/index\";\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchWord: state.homeReducer.searchWord,\r\n    newSearchAdded: state.homeReducer.newSearchAdded\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  searchWord: (searchWord, cb) => {\r\n    HomeActions.searchWord(searchWord, cb, dispatch);\r\n  },\r\n  newSearchWordAdded: () => {\r\n    HomeActions.newSearchWordAdded(dispatch);\r\n  },\r\n  getImg: (searchWord, cb) => {\r\n    HomeActions.getImg(searchWord, cb)\r\n  }\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HomeComponent));\r\n","import { Grid } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginBottom: 25\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nexport default function InfoComponent() {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Typography variant=\"h4\" gutterBottom>Tech. Stack</Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Card className={classes.root}>\r\n                        <CardHeader\r\n                            avatar={<Avatar src={`https://cdn.iconscout.com/icon/free/png-128/react-3-1175109.png`} />}\r\n                            title=\"React Js\"\r\n                            subheader=\"v.16.13.1\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                React is a declarative, efficient, and flexible JavaScript library for building user interfaces.\r\n                            </Typography>\r\n\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                    <Card className={classes.root}>\r\n                        <CardHeader\r\n                            avatar={<Avatar src={`https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/386/square_256/redux.png`} />}\r\n                            title=\"Redux\"\r\n                            subheader=\"v.4.0.5\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Redux is a predictable state container for JavaScript apps.\r\n                      </Typography>\r\n\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12} md={6}>\r\n                    <Card className={classes.root}>\r\n                        <CardHeader\r\n                            avatar={<Avatar src={`https://material-ui.com/static/logo_raw.svg`} />}\r\n                            title=\"Material UI\"\r\n                            subheader=\"v.4.11.0\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                React components for faster and easier web development. Build your own design system, or start with Material Design.\r\n                      </Typography>\r\n\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n\r\n\r\n\r\n            </Grid>\r\n\r\n            <Typography variant=\"h4\" gutterBottom>APIs</Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Card className={classes.root}>\r\n                        <CardHeader\r\n                            avatar={<Avatar src={`https://owlbot.info/static/dictionary/img/owlbot.png`} />}\r\n                            title=\"Owl Bot\"\r\n                            subheader=\"v.4\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Free Dictionary API\r\n                            </Typography>\r\n\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                    <Card className={classes.root}>\r\n                        <CardHeader\r\n                            avatar={<Avatar src={`https://developers.giphy.com/branch/master/static/header-logo-8974b8ae658f704a5b48a2d039b8ad93.gif`} />}\r\n                            title=\"GIPHY\"\r\n                            subheader=\"v.1\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                GIPHY SDK helps you integrate the world's largest GIF library.\r\n                      </Typography>\r\n\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Typography variant=\"h4\" gutterBottom>Developer</Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Card className={classes.root}>\r\n                        <CardHeader\r\n                            avatar={<Avatar src={`https://media-exp1.licdn.com/dms/image/C4D03AQFuvR5Qmllc6g/profile-displayphoto-shrink_200_200/0?e=1601510400&v=beta&t=u4aC5-_Yep5rThMSM6UdsmeIfh_1p1FS0zkuBiGY0SM`} />}\r\n                            title=\"Sunil Kumar | UI Architect\"\r\n                            subheader={\r\n                                <>\r\n                                    <a href=\"https://www.linkedin.com/in/sunil-kumar-83146843/\" target=\"_blank\"><LinkedInIcon /></a>\r\n                                    <a href=\"https://sunilkumar-profile.web.app/profile\" target=\"_blank\"><AccountBoxIcon /></a>\r\n                                </>\r\n                            }\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Angular | React | Redux | Node | MongoDB | JavaScript | JSON | JQuery\r\n                            </Typography>\r\n\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n    );\r\n}\r\n","import CacheManager from 'helpers/cache-manager';\r\nimport { SELECTED_TIMEZONE } from 'helpers/constants';\r\nimport * as types from '../../../action-types';\r\n\r\nconst setSelectedTimeZones = (list, dispatch) => {\r\n  CacheManager.setItem(SELECTED_TIMEZONE, list);\r\n  dispatch({ type: types.SELECTED_TIMEZONES_CHANGED, payload: list });\r\n}\r\n\r\nexport default {\r\n  setSelectedTimeZones\r\n};\r\n","import FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport React, { Component } from \"react\";\r\n\r\nclass RenderSelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { name, label, value, data, onChange } = this.props;\r\n        return <>\r\n            <FormControl>\r\n                <InputLabel htmlFor={`select-${name}`}>{label}</InputLabel>\r\n                <Select\r\n                    labelId={`select-label-${name}`}\r\n                    id={`select-${name}`}\r\n                    name={name}\r\n                    value={value}\r\n                    required={true}\r\n                    native\r\n                    onChange={onChange}\r\n                    input={<Input />}\r\n                >\r\n                    <option aria-label=\"\" value=\"\" ></option>\r\n                    {(data || []).map(itm => {\r\n                        return <option value={itm.id}>{itm.label}</option>\r\n                        return\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default RenderSelect;\r\n","import Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AvTimerIcon from '@material-ui/icons/AvTimer';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { displayTimeZone } from 'helpers';\r\nimport * as lodash from 'lodash';\r\nimport moment from 'moment';\r\nimport React from \"react\";\r\nimport RenderSelect from 'shared-components/Select/index';\r\n\r\nclass HourListComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            hour: null,\r\n            minute: null,\r\n            am: null,\r\n            timezone: null,\r\n            hourOptions: [],\r\n            minOptions: [],\r\n            amPMOptions: [],\r\n            timezoneOptions: [],\r\n            selectedTime: null,\r\n            isValidSelection: false,\r\n            addedTimeZones: [],\r\n            errorMsg: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateMasterData();\r\n    }\r\n\r\n    componentDidUpdate(nextProps) {\r\n        const prevId = this.props.selectedTimeZonesChanged;\r\n        const nextId = nextProps.selectedTimeZonesChanged;\r\n        if (prevId !== nextId) {\r\n            this.populateMasterData();\r\n        }\r\n    }\r\n\r\n    populateMasterData = () => {\r\n        let hourOptions = [];\r\n        for (let i = 0; i < 12; i++) {\r\n            hourOptions.push({ id: i, label: i });\r\n        }\r\n\r\n        let minOptions = [];\r\n        for (let i = 0; i < 60; i += 5) {\r\n            minOptions.push({ id: i, label: i });\r\n        }\r\n\r\n        let amPMOptions = [];\r\n        amPMOptions.push({ id: 'am', label: 'AM' });\r\n        amPMOptions.push({ id: 'pm', label: 'PM' });\r\n\r\n        let addedTimeZones = lodash.get(this.props, 'SelectedTimeZones', []);\r\n        const timezoneOptions = (addedTimeZones || []).map(itm => { return { id: itm, label: displayTimeZone(itm) } })\r\n\r\n        this.setState({ hourOptions, minOptions, amPMOptions, timezoneOptions, addedTimeZones });\r\n    }\r\n\r\n    checkValidSelection = () => {\r\n        const { timezone, selectedTime } = this.state;\r\n        if (!timezone || !selectedTime) {\r\n            this.setState({ isValidSelection: false });\r\n            return;\r\n        }\r\n\r\n        this.setState({ isValidSelection: true });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value }, () => {\r\n            const { hour, minute, am } = this.state;\r\n            if (hour && minute && am) {\r\n                this.setState({ errorMsg: false });\r\n            }\r\n        });\r\n    };\r\n\r\n    handleSelectTime = (evt) => {\r\n        this.setState({ errorMsg: false });\r\n        const { hour, minute, am, timezone } = this.state;\r\n        if (!hour || !minute || !am) {\r\n            this.setState({ errorMsg: true });\r\n            return;\r\n        }\r\n\r\n\r\n        const TODAY = new Date();\r\n        let hour24 = am === 'pm' ? parseInt(hour) + 12 : hour;\r\n        const selectedDateTime = moment.tz(new Date(), timezone).hour(hour24).minute(minute);\r\n        const selectedTime = `${TODAY.getFullYear()}-${TODAY.getMonth() + 1}-${TODAY.getDate()} ${hour}:${minute}:00 ${am.toUpperCase()}`;\r\n\r\n        this.setState({ open: false, selectedTime: selectedTime, selectedDateTime: selectedDateTime }, () => {\r\n            this.checkValidSelection();\r\n        });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleOpenTimePopup = () => {\r\n        this.setState({ open: true });\r\n    }\r\n\r\n    displaySelectedTimeInGivenTimeZone = (currentTimeZone) => {\r\n        const { selectedTime, timezone, hour, minute, am } = this.state;\r\n        if (!selectedTime) {\r\n            return '';\r\n        }\r\n\r\n        let hour24 = am === 'pm' ? parseInt(hour) + 12 : hour;\r\n        const TODAY = moment.tz(new Date(), timezone).hour(hour24).minute(minute);\r\n        const targetZonedTime = TODAY.clone().tz(currentTimeZone);\r\n        return targetZonedTime.format('hh:mm A');\r\n    }\r\n\r\n    render() {\r\n        const { hourOptions, minOptions, amPMOptions, hour, minute, am, open, selectedTime, selectedDateTime, timezone, timezoneOptions, errorMsg, addedTimeZones, isValidSelection } = this.state;\r\n        return <>\r\n\r\n            <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={this.handleCancel}>\r\n                <DialogTitle>Select Time</DialogTitle>\r\n                <DialogContent>\r\n                    <form className=\"time-form\">\r\n                        <div className=\"time-zone-select\">\r\n                            <RenderSelect label=\"Time Zone\" name=\"timezone\" value={timezone} data={timezoneOptions} onChange={this.handleChange} />\r\n                        </div>\r\n\r\n                        <div className=\"time-form-select select-hour\">\r\n                            <RenderSelect label=\"Hour\" name=\"hour\" value={hour} data={hourOptions} onChange={this.handleChange} />\r\n                        </div>\r\n\r\n                        <div className=\"time-form-select select-minute\">\r\n                            <RenderSelect label=\"Minute\" name=\"minute\" value={minute} data={minOptions} onChange={this.handleChange} />\r\n                        </div>\r\n\r\n                        <div className=\"time-form-select select-am\">\r\n                            <RenderSelect label=\"AM/PM\" name=\"am\" value={am} data={amPMOptions} onChange={this.handleChange} />\r\n                        </div>\r\n\r\n                    </form>\r\n                    {errorMsg && <span className=\"text-error\">*All fields are required!</span>}\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color=\"primary\">Cancel</Button>\r\n                    <Button onClick={this.handleSelectTime} color=\"primary\">Ok</Button>\r\n\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <div className=\"hour-list-accordian\">\r\n                <Accordion>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\" >\r\n                        <Typography className=\"\">Calculate time at other locations, for given time</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n\r\n                        <Grid container spacing={3} className=\"time-container\">\r\n                            <Grid item xs={12} md={12}>\r\n                                <div className=\"spn-selected-time\">\r\n                                    <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={this.handleOpenTimePopup} startIcon={<AvTimerIcon />}>Select Time</Button>\r\n                                    {isValidSelection && <div className=\"selected-time-msg\">Display current time at other places, when time at <b>{timezone ? displayTimeZone(timezone) : 'Selected Timezone'}</b> is <b>{selectedDateTime ? selectedDateTime.format('hh:mm A') : 'Selected time'}</b> </div>}\r\n                                </div>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} md={12}>\r\n                                {isValidSelection && <div>\r\n                                    <Grid container spacing={3}>\r\n                                        {lodash.map(addedTimeZones, itm => {\r\n                                            return <Grid item xs={6} md={3}>\r\n                                                <Card className=\"\">\r\n                                                    <CardActionArea>\r\n                                                        <CardContent>\r\n                                                            <Typography gutterBottom variant=\"h6\" component=\"h2\">{this.displaySelectedTimeInGivenTimeZone(itm)}</Typography>\r\n                                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                                <span className=\"time-zone-name\"> {displayTimeZone(itm)}</span>\r\n                                                            </Typography>\r\n                                                        </CardContent>\r\n                                                    </CardActionArea>\r\n                                                </Card>\r\n                                            </Grid>\r\n                                        })}\r\n\r\n                                    </Grid>\r\n                                </div>\r\n                                }\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default HourListComponent;\r\n","import Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport * as lodash from 'lodash';\r\nimport * as momentTz from 'moment-timezone';\r\nimport React from 'react';\r\n\r\nclass SelectTimeZoneComponent extends React.Component {\r\n    intervalTimer = null;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filteredTimeZones: [],\r\n            timezoneNames: momentTz.tz.names(),\r\n            addedTimeZones: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fillPreSelectTimeZones();\r\n    }\r\n\r\n    fillPreSelectTimeZones = () => {\r\n        const addedTimeZones = lodash.get(this.props, 'SelectedTimeZones', []);\r\n        this.setState({ addedTimeZones: addedTimeZones });\r\n    }\r\n\r\n    handleAddWatches = () => {\r\n        const { addedTimeZones } = this.state;\r\n        this.props.setSelectedTimeZones(addedTimeZones);\r\n        this.props.handleAddWatches(1);\r\n    }\r\n\r\n    handleAddWatchesCancel = () => {\r\n        this.props.handleAddWatches(0);\r\n    }\r\n\r\n    handleSearchTimeZone = (evt) => {\r\n        let { value } = evt.target;\r\n        value = (value || '').toLowerCase();\r\n\r\n        if (!value) {\r\n            this.setState({ filteredTimeZones: [] })\r\n            return;\r\n        }\r\n\r\n        this.doSearch(value);\r\n    }\r\n\r\n    doSearch = lodash.debounce((value) => {\r\n        const { timezoneNames } = this.state;\r\n        const filteredZones = lodash.filter(timezoneNames, (itm) => (itm || '').toLowerCase().indexOf(value) > -1);\r\n        this.setState({ filteredTimeZones: filteredZones })\r\n    }, 500);\r\n\r\n    handleToggle = (value) => {\r\n        const { addedTimeZones } = this.state;\r\n        const currentIndex = addedTimeZones.indexOf(value);\r\n        const newaddedTimeZones = [...addedTimeZones];\r\n\r\n        if (currentIndex === -1) {\r\n            newaddedTimeZones.push(value);\r\n        } else {\r\n            newaddedTimeZones.splice(currentIndex, 1);\r\n        }\r\n\r\n        this.setState({ addedTimeZones: newaddedTimeZones });\r\n    }\r\n\r\n    render() {\r\n        const { errorMsg, addedTimeZones, filteredTimeZones } = this.state;\r\n        return <>\r\n            <Dialog fullScreen disableBackdropClick disableEscapeKeyDown open={true} onClose={this.handleAddWatchesCancel}>\r\n                <DialogTitle>Choose your timezone(s)</DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                id=\"outlined-helperText\"\r\n                                label=\"Search timezone\"\r\n                                defaultValue=\"\"\r\n                                onKeyUp={this.handleSearchTimeZone}\r\n                                helperText=\"Start typing name of time zone and we'll display matched results\"\r\n                                variant=\"outlined\"\r\n                            />\r\n\r\n                            <List >\r\n                                {(filteredTimeZones || []).map((value) => {\r\n                                    const labelId = `checkbox-list-label-${value}`;\r\n                                    return (\r\n                                        <ListItem key={value} role={undefined} dense button onClick={() => { this.handleToggle(value) }}>\r\n                                            <ListItemIcon>\r\n                                                <Checkbox\r\n                                                    edge=\"start\"\r\n                                                    checked={addedTimeZones.indexOf(value) !== -1}\r\n                                                    tabIndex={-1}\r\n                                                    disableRipple\r\n                                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                                />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText id={labelId} primary={value} />\r\n\r\n                                        </ListItem>\r\n                                    );\r\n                                })}\r\n                            </List>\r\n\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            <h3>Added Timezones</h3>\r\n\r\n                            <List >\r\n                                {(addedTimeZones || []).map((value) => {\r\n                                    const labelId = `checkbox-list-label-${value}`;\r\n                                    return (\r\n                                        <ListItem key={value} role={undefined} dense button>\r\n\r\n                                            <ListItemText id={labelId} primary={value} />\r\n                                            <ListItemSecondaryAction>\r\n                                                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => { this.handleToggle(value) }} >\r\n                                                    <DeleteIcon />\r\n                                                </IconButton>\r\n                                            </ListItemSecondaryAction>\r\n\r\n                                        </ListItem>\r\n                                    );\r\n                                })}\r\n                            </List>\r\n\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={this.handleAddWatchesCancel} color=\"primary\">Cancel</Button>\r\n                    <Button onClick={this.handleAddWatches} color=\"primary\">Ok</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default SelectTimeZoneComponent;\r\n","import Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { displayTimeZone } from 'helpers';\r\nimport CacheManager from 'helpers/cache-manager';\r\nimport { DEFAULT_TIMEZONE_LIST, SELECTED_TIMEZONE } from 'helpers/constants';\r\nimport * as lodash from 'lodash';\r\nimport * as momentTz from 'moment-timezone';\r\nimport React from 'react';\r\nimport SelectTimeZoneComponent from '../select-time-zone-component/index';\r\n\r\nclass WatchListComponent extends React.Component {\r\n    intervalTimer = null;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            savedSearches: [],\r\n            selectedWatches: [],\r\n            showDeletePopup: false,\r\n            selected: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.displaySelectedTimes();\r\n        this.initializeInterval();\r\n    }\r\n\r\n    displaySelectedTimes = () => {\r\n        let timeZoneList = [];\r\n        let addedTimeZones = CacheManager.getItem(SELECTED_TIMEZONE, []);\r\n        if (addedTimeZones.length === 0) {\r\n            addedTimeZones = DEFAULT_TIMEZONE_LIST;\r\n        }\r\n\r\n        lodash.map(addedTimeZones || [], itm => {\r\n            timeZoneList.push({\r\n                zone: itm,\r\n                zoneName: displayTimeZone(itm),\r\n                timeStamp: momentTz.tz(new Date(), itm).format('hh:mm:ss A'),\r\n                timeStampDate: momentTz.tz(new Date(), itm).format('MMM, DD'),\r\n            })\r\n        })\r\n\r\n        timeZoneList = lodash.orderBy(timeZoneList, ['zoneName'], ['asc']);\r\n        this.setState({ selectedWatches: timeZoneList });\r\n    }\r\n\r\n    initializeInterval = () => {\r\n        if (this.intervalTimer) {\r\n            window.clearInterval(this.intervalTimer);\r\n        }\r\n        this.intervalTimer = window.setInterval(this.displaySelectedTimes, 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.intervalTimer) {\r\n            window.clearInterval(this.intervalTimer);\r\n        }\r\n    }\r\n\r\n    handleOpenSetting = () => {\r\n        this.setState({ openTimezonePopup: true });\r\n    }\r\n\r\n    handleAddWatches = (evt) => {\r\n        this.setState({ openTimezonePopup: false });\r\n    }\r\n\r\n    render() {\r\n        const { selectedWatches, openTimezonePopup, errorMsg, filteredTimeZones } = this.state;\r\n        return <>\r\n            {openTimezonePopup && <SelectTimeZoneComponent {...this.props} handleAddWatches={this.handleAddWatches} />}\r\n\r\n            <Paper elevation={0} >\r\n                <div className=\"div-header\">\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={8} md={6}>\r\n                            <div className=\"header-title\">Selected Clocks</div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={4} md={6}>\r\n                            <span className=\"setting-icon\">\r\n                                <IconButton aria-label=\"delete\" onClick={this.handleOpenSetting}>\r\n                                    <SettingsIcon />\r\n                                </IconButton>\r\n                            </span>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n                <div className=\"div-selected-watches\">\r\n                    <Grid container spacing={3}>\r\n                        {lodash.map(selectedWatches, itm => {\r\n                            return <Grid item xs={6} md={2}>\r\n                                <Card className=\"\">\r\n                                    <CardActionArea>\r\n                                        <CardContent>\r\n                                            <Typography gutterBottom variant=\"h6\" component=\"h2\">{itm.timeStamp}</Typography>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                <span className=\"time-zone-name\"> {displayTimeZone(itm.zone)}</span>\r\n                                                <div className=\"time-zone-date\"> <Chip label={itm.timeStampDate} disabled size=\"small\" variant=\"outlined\" /></div>\r\n\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                            </Grid>\r\n                        })}\r\n\r\n                    </Grid>\r\n                </div>\r\n            </Paper>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default WatchListComponent;\r\n","import CacheManager from 'helpers/cache-manager';\r\nimport { DEFAULT_TIMEZONE_LIST, SELECTED_TIMEZONE } from 'helpers/constants';\r\nimport React from \"react\";\r\nimport HourListComponent from './hour-list-component/index';\r\nimport WatchListComponent from './selected-watches-component/index';\r\nclass TimezoneMonitorComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            searchResult: null,\r\n            errorMsg: '',\r\n            selectedWatches: [],\r\n            noRecordFound: false,\r\n            openTimezonePopup: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let addedTimeZones = CacheManager.getItem(SELECTED_TIMEZONE, []);\r\n        if (addedTimeZones.length === 0) {\r\n            addedTimeZones = DEFAULT_TIMEZONE_LIST;\r\n        }\r\n\r\n        this.props.setSelectedTimeZones(addedTimeZones);\r\n    }\r\n\r\n    render() {\r\n        const { errorMsg, } = this.state;\r\n        return (\r\n            <>\r\n                <WatchListComponent {...this.props} />\r\n                <HourListComponent {...this.props} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TimezoneMonitorComponent;\r\n","import { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport TimeZoneActions from \"../actions/timezone-actions\";\r\nimport TimezoneMonitorComponent from \"../components/timezone-component/index\";\r\nconst mapStateToProps = state => {\r\n  return {\r\n    SelectedTimeZones: state.timezoneReducer.SelectedTimeZones,\r\n    selectedTimeZonesChanged: state.timezoneReducer.selectedTimeZonesChanged\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setSelectedTimeZones: (list) => {\r\n    TimeZoneActions.setSelectedTimeZones(list, dispatch);\r\n  }\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(TimezoneMonitorComponent));\r\n","import CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppLayout from 'components/layout-component/index';\r\nimport CustomLoader from 'components/loader-component/index';\r\nimport DictionaryComponent from 'modules/dictionary/containers/dictionary.container';\r\nimport HomeComponent from 'modules/home/containers/home.container';\r\nimport InfoComponent from 'modules/info/index';\r\nimport TimezoneComponent from 'modules/timezone-monitor/containers/timezone.container';\r\nimport React, { Suspense } from 'react';\r\nimport { Switch } from \"react-router\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\n\r\nexport const AppRoutes = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <HashRouter>\r\n            <Switch>\r\n                <div>\r\n                    <CssBaseline />\r\n                    <AppLayout />\r\n                    <main className=\"main-content\">\r\n                        <div className={classes.appBarSpacer} />\r\n                        <Grid container>\r\n                            <Grid item xs={12} md={12} lg={12}>\r\n                                <Suspense fallback={<CustomLoader />}>\r\n\r\n                                    <Route exact path=\"/\" component={HomeComponent} />\r\n                                    <Route exact path=\"/dictionary/search\" component={DictionaryComponent} />\r\n                                    <Route exact path=\"/dictionary/search/:searchTerm\" component={DictionaryComponent} />\r\n                                    <Route exact path=\"/time-zone-monitor\" component={TimezoneComponent} />\r\n                                    <Route path=\"/info\" component={InfoComponent} />\r\n                                </Suspense>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </main>\r\n                </div>\r\n            </Switch>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default AppRoutes;","import React, { Component } from \"react\";\nimport './App.css';\nimport AppRoutes from './app.routes.js';\nimport CustomLoader from './components/loader-component/index';\nclass App extends Component {\n  render() {\n    const { loading } = this.props;\n    return (\n      <div className=\"App\">\n        {loading && <CustomLoader />}\n        <AppRoutes />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App';\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.commonReducer.loading,\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n","import * as type from '../action-types';\r\n\r\nexport const setLoader = (flag) => ({\r\n    type: type.SET_LOADER,\r\n    flag\r\n});\r\n\r\nexport default {\r\n    setLoader\r\n}\r\n","import axios from \"axios\";\r\nimport * as lodash from \"lodash\";\r\nimport commonActions from \"./common.actions\";\r\n\r\nconst SilentRequestURLs = [\r\n  '/v1/gifs/search',\r\n  'silent=1',\r\n];\r\n\r\nconst IgnoreResponseInterceptorForThisList = [\r\n  '/download/'\r\n];\r\n\r\nconst isSilentAPICall = (url) => {\r\n  const isSilentURL = lodash.find(SilentRequestURLs, (itm) => {\r\n    return url.indexOf(itm) > -1;\r\n  });\r\n\r\n  return isSilentURL != null\r\n}\r\n\r\nconst isIgnoreURL = (url) => {\r\n  const isIgnoreURL = lodash.find(IgnoreResponseInterceptorForThisList, (itm) => {\r\n    return url.indexOf(itm) > -1;\r\n  });\r\n\r\n  return isIgnoreURL != null\r\n}\r\n\r\nlet currentRequests = 0;\r\nconst setupInterceptors = store => {\r\n  // Request Interceptor\r\n  axios.interceptors.request.use(config => {\r\n    const isSilectURL = isSilentAPICall(config.url);\r\n    if (!isSilectURL) {\r\n      currentRequests++;\r\n      store.dispatch(commonActions.setLoader(true));\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      config.headers.Authorization = `Token 35fc545ff94ce38457b0e1b126e1cc1c2c65324b`;\r\n      //config.headers.uniquerequestid = utilCommon.generateUUID();\r\n      //config.headers.timezoneoffset = new Date().getTimezoneOffset()\r\n      resolve(config)\r\n    });\r\n\r\n  });\r\n\r\n  // Response Interceptor\r\n  axios.interceptors.response.use(\r\n    response => {\r\n      const isSilectURL = isSilentAPICall(response.config.url);\r\n      if (!isSilectURL) {\r\n        currentRequests--;\r\n        if (currentRequests <= 0) {\r\n          store.dispatch(commonActions.setLoader(false));\r\n        }\r\n      }\r\n\r\n      if (isIgnoreURL(response.config.url)) {\r\n        return response;\r\n      }\r\n\r\n      if (response && response.data) {\r\n        // Strip out )]} string, is response is string. This is done to prevent XSS attacks.\r\n        if (lodash.isString(response.data)) {\r\n          // Parse JSON for security\r\n          let updateData = response.data.replace(\")]}\", \"\");\r\n          response.data = JSON.parse(updateData);\r\n        }\r\n      }\r\n      return response;\r\n    },\r\n    error => {\r\n      currentRequests = 0;\r\n      const status = error.response ? error.response.status : null;\r\n      if (lodash.includes([401, 451], status)) {\r\n        let msg = '';\r\n        switch (status) {\r\n          default: msg = 'Session expired, please login again.';\r\n        }\r\n\r\n        store.dispatch(commonActions.setLoader(false));\r\n        return Promise.reject(error);\r\n      }\r\n\r\n      const isSilectURL = isSilentAPICall(lodash.get(error, 'config.url', ''));\r\n      if (!isSilectURL) {\r\n        store.dispatch(commonActions.setLoader(false));\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n};\r\n\r\nexport default setupInterceptors;\r\n\r\n","import { merge } from 'lodash';\r\n\r\nconst config = {\r\n    all: {\r\n        env: process.env.NODE_ENV || 'development',\r\n        isDev: true,\r\n        basename: process.env.PUBLIC_PATH,\r\n        isBrowser: typeof window !== 'undefined'\r\n    },\r\n    test: {},\r\n    development: {},\r\n    production: {}\r\n};\r\n\r\nexport default merge(config.all, config[config.all.env]);\r\n","import * as type from '../action-types';\r\nconst initialState = {\r\n    loading: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case type.SET_LOADER: return { ...state, loading: action.flag };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as type from \"action-types\";\r\nconst initialState = {\r\n  searchWord: {},\r\n  newSearchAdded: 0\r\n};\r\n\r\nconst homeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case type.SET_SEARCH_WORD: return { ...state, searchWord: action.payload };\r\n    case type.NEW_SEARCH_ADDED: return { ...state, newSearchAdded: state.newSearchAdded + 1 };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default homeReducer;\r\n","import * as type from \"action-types\";\r\nconst initialState = {\r\n  searchWord: {}\r\n};\r\n\r\nconst homeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case type.SET_SEARCH_WORD: return { ...state, searchWord: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default homeReducer;\r\n","import * as type from \"action-types\";\r\nconst initialState = {\r\n  SelectedTimeZones: [],\r\n  selectedTimeZonesChanged: 0\r\n};\r\n\r\nconst timezoneReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case type.SELECTED_TIMEZONES_CHANGED: return {\r\n      ...state,\r\n      SelectedTimeZones: action.payload,\r\n      selectedTimeZonesChanged: state.selectedTimeZonesChanged + 1\r\n    };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default timezoneReducer;\r\n","import commonReducer from \"helpers/common.reducer\";\r\nimport dictionaryReducer from \"modules/dictionary/reducers/dictionary.reducer\";\r\nimport homeReducer from \"modules/home/reducers/home.reducer\";\r\nimport timezoneReducer from \"modules/timezone-monitor/reducers/timezone.reducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { reducer as form } from \"redux-form\";\r\nimport { i18nReducer } from \"redux-react-i18n\";\r\n\r\n\r\nconst reducers = {\r\n  i18nReducer,\r\n  form,\r\n  commonReducer,\r\n  homeReducer,\r\n  dictionaryReducer,\r\n  timezoneReducer\r\n};\r\n\r\nexport default combineReducers(reducers);\r\n","import en from './assets/i18n/en';\r\n\r\nexport const translations = {\r\n  'en-US': en\r\n};\r\n","const en = {\r\n\t'2040': { type: 'attention', text: 'The update reason will not be saved as no edits were made.' }\r\n}\r\nexport default en;\r\n","import { compose, createStore } from 'redux';\r\nimport { i18nActions } from 'redux-react-i18n';\r\nimport config from './global/config';\r\nimport reducer from './root-reducer';\r\nimport { translations } from './translations';\r\n\r\n// Check for dev env, if false hide extensions like redux\r\nconst { isDev, isBrowser } = config;\r\nconst devtools = isDev && isBrowser && window.devToolsExtension\r\n    ? window.devToolsExtension\r\n    : () => (fn) => fn;\r\n\r\nconst dictionaries = translations;\r\n\r\nconst languages = [\r\n    {\r\n        code: 'en-US',\r\n        name: 'English (USA)'\r\n    }\r\n];\r\n\r\nlet store = null;\r\n\r\nconst configureStore = (initialState = {}, services = {}) => {\r\n    const enhancers = [devtools()];\r\n    store = createStore(reducer, initialState, compose(...enhancers));\r\n    store.dispatch(i18nActions.setDictionaries(dictionaries));\r\n    store.dispatch(i18nActions.setLanguages(languages));\r\n    store.dispatch(i18nActions.setCurrentLanguage('en-US'));\r\n    return store;\r\n};\r\n\r\nexport { configureStore, store };\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport App from './app.container';\nimport setupInterceptors from \"./helpers/interceptor\";\nimport './index.css';\nimport { configureStore } from \"./store\";\n\nconst store = configureStore({}, {});\nsetupInterceptors(store);\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  // // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}