{"version":3,"sources":["assets/images/clocks.jpg","components/layout-component/index.js","components/loader-component/index.js","modules/home/components/home-component/index.js","modules/home/containers/home.container.js","modules/info/index.js","helpers/cache-manager.js","helpers/constants.js","modules/timezone-monitor/actions/timezone-actions.js","action-types.js","helpers/index.js","shared-components/Select/index.js","modules/timezone-monitor/components/timezone-component/hour-list-component/index.js","modules/timezone-monitor/components/timezone-component/select-time-zone-component/index.js","modules/timezone-monitor/components/timezone-component/selected-watches-component/index.js","modules/timezone-monitor/components/timezone-component/index.js","modules/timezone-monitor/containers/timezone.container.js","app.routes.js","App.js","app.container.js","global/config.js","helpers/common.reducer.js","modules/home/reducers/home.reducer.js","modules/timezone-monitor/reducers/timezone.reducer.js","root-reducer.js","store.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","width","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","AppLayout","classes","React","useState","open","setOpen","AppBar","className","clsx","Toolbar","IconButton","edge","color","aria-label","onClick","Typography","component","variant","noWrap","to","backdrop","CustomerLoader","Backdrop","CircularProgress","HomeComponent","props","state","value","searchResult","errorMsg","noRecordFound","Grid","item","xs","md","lg","Card","CardActionArea","CardMedia","image","ClockImage","CardContent","gutterBottom","CardActions","Button","size","href","target","rel","Component","withRouter","connect","marginBottom","media","expand","transform","marginLeft","shortest","expandOpen","avatar","backgroundColor","red","InfoComponent","CardHeader","Avatar","src","subheader","xmlns","viewBox","fill","class","fill-rule","clip-rule","d","CacheManager","isStringyfied","txt","JSON","parse","e","getItem","key","defaultValue","val","window","localStorage","setItem","stringify","removeItem","clear","DEFAULT_TIMEZONE_LIST","list","dispatch","type","payload","displayTimeZone","timeZone","timeZoneSplit","split","length","replace","RenderSelect","this","name","label","data","onChange","FormControl","InputLabel","htmlFor","Select","required","input","Input","map","itm","id","HourListComponent","populateMasterData","hourOptions","i","push","minOptions","amPMOptions","addedTimeZones","lodash","timezoneOptions","setState","checkValidSelection","timezone","selectedTime","isValidSelection","handleChange","event","hour","minute","am","handleSelectTime","evt","TODAY","Date","selectedDateTime","getFullYear","getMonth","getDate","toUpperCase","moment","handleCancel","handleOpenTimePopup","displaySelectedTimeInGivenTimeZone","currentTimeZone","hour24","tz","clone","format","nextProps","selectedTimeZonesChanged","Dialog","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","DialogActions","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","Paper","elevation","Chip","disabled","startIcon","SelectTimeZoneComponent","intervalTimer","fillPreSelectTimeZones","handleAddWatches","setSelectedTimeZones","handleAddWatchesCancel","handleSearchTimeZone","toLowerCase","doSearch","filteredTimeZones","timezoneNames","filteredZones","indexOf","handleToggle","currentIndex","newaddedTimeZones","splice","momentTz","names","fullScreen","TextField","onKeyUp","helperText","List","labelId","ListItem","role","undefined","dense","button","ListItemIcon","Checkbox","checked","tabIndex","disableRipple","inputProps","ListItemText","primary","ListItemSecondaryAction","WatchListComponent","displaySelectedTimes","timeZoneList","zone","timeStamp","timeStampDate","selectedWatches","initializeInterval","clearInterval","setInterval","handleOpenSetting","openTimezonePopup","savedSearches","showDeletePopup","selected","TimezoneMonitorComponent","SelectedTimeZones","timezoneReducer","TimeZoneActions","AppRoutes","Switch","CssBaseline","fallback","exact","path","TimezoneComponent","App","loading","commonReducer","config","all","env","process","isDev","basename","PUBLIC_PATH","isBrowser","test","development","production","merge","initialState","searchWord","homeReducer","action","reducers","form","flag","combineReducers","devtools","devToolsExtension","fn","store","enhancers","createStore","reducer","compose","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6dcc4b82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clocks.7bafc0c6.jpg\";","import AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24 // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginRight: 36\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none'\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9)\r\n    }\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto'\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column'\r\n  },\r\n  fixedHeight: {\r\n    height: 240\r\n  }\r\n}));\r\n\r\nexport default function AppLayout() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position='absolute'\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge='start'\r\n            color='inherit'\r\n            aria-label='open drawer'\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              open && classes.menuButtonHidden\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          <Typography\r\n            component='h1'\r\n            variant='h6'\r\n            color='inherit'\r\n            noWrap\r\n            className={classes.title}\r\n          >\r\n            <Link to={'/'} className='white-link'>\r\n              <IconButton color='inherit'>\r\n                <HomeIcon />\r\n              </IconButton>\r\n            </Link>\r\n            <Link\r\n              to={'/time-zone-monitor'}\r\n              className='white-link'\r\n              title='Time zone monitor'\r\n            >\r\n              <IconButton color='inherit'>\r\n                <ScheduleIcon />\r\n              </IconButton>\r\n            </Link>\r\n          </Typography>\r\n\r\n          <Link to={'/info'} className='white-link'>\r\n            <IconButton color='inherit'>\r\n              <InfoIcon />\r\n            </IconButton>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n}\r\n","import Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from \"react\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nexport default function CustomerLoader() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"loader\">\r\n            <Backdrop className={classes.backdrop} open={true}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ClockImage from 'assets/images/clocks.jpg';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass HomeComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: '',\r\n      searchResult: null,\r\n      errorMsg: '',\r\n      noRecordFound: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const classes = {};\r\n    return (\r\n      <>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <div className='home-cards'>\r\n              <Link to={'/time-zone-monitor'} title='Time zone monitor'>\r\n                <Card className={classes.root}>\r\n                  <CardActionArea>\r\n                    <CardMedia\r\n                      className='home-card-img'\r\n                      image={ClockImage}\r\n                      title='Multi zone clocks'\r\n                    />\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant='h5' component='h2'>\r\n                        Multi zone clocks\r\n                      </Typography>\r\n                      <Typography\r\n                        variant='body2'\r\n                        color='textSecondary'\r\n                        component='p'\r\n                      >\r\n                        Display clocks of multiple geographical locations. Save\r\n                        your favorite locations. Calculate time at different\r\n                        timezone, etc.\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions>\r\n                    <Button size='small' color='primary'>\r\n                      Explore\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Link>\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <div className='home-cards'>\r\n              <a\r\n                href='https://www.ui-geeks.in'\r\n                target='_blank'\r\n                rel='noopener noreferrer'\r\n                title='UI Geeks'\r\n              >\r\n                <Card className={classes.root}>\r\n                  <CardActionArea>\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant='h5' component='h2'>\r\n                        UI Geeks\r\n                      </Typography>\r\n                      <Typography\r\n                        variant='body2'\r\n                        color='textSecondary'\r\n                        component='p'\r\n                      >\r\n                        UI-Geeks is an online learning platform. Learn Core and\r\n                        Advanced Concepts, Blogs, Summary of JavaScript, React,\r\n                        Angular, SCSS, CSS.\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions>\r\n                    <Button size='small' color='primary'>\r\n                      Explore\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </a>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeComponent;\r\n","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport HomeComponent from '../components/home-component/index';\r\n\r\nexport default withRouter(connect(null, null)(HomeComponent));\r\n","import { Grid } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginBottom: 25\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%' // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)'\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nexport default function InfoComponent() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Typography variant='h4' gutterBottom>\r\n        Tech. Stack\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <Card className={classes.root}>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar\r\n                  src={`https://cdn.iconscout.com/icon/free/png-128/react-3-1175109.png`}\r\n                />\r\n              }\r\n              title='React Js'\r\n              subheader='v.16.13.1'\r\n            />\r\n            <CardContent>\r\n              <Typography variant='body2' color='textSecondary' component='p'>\r\n                React is a declarative, efficient, and flexible JavaScript\r\n                library for building user interfaces.\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <Card className={classes.root}>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar\r\n                  src={`https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/386/square_256/redux.png`}\r\n                />\r\n              }\r\n              title='Redux'\r\n              subheader='v.4.0.5'\r\n            />\r\n            <CardContent>\r\n              <Typography variant='body2' color='textSecondary' component='p'>\r\n                Redux is a predictable state container for JavaScript apps.\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <Card className={classes.root}>\r\n            <CardHeader\r\n              avatar={\r\n                <svg\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                  width='30'\r\n                  height='32'\r\n                  viewBox='0 0 36 32'\r\n                  fill='none'\r\n                  class='css-1170n61'\r\n                >\r\n                  <path\r\n                    fill-rule='evenodd'\r\n                    clip-rule='evenodd'\r\n                    d='M30.343 21.976a1 1 0 00.502-.864l.018-5.787a1 1 0 01.502-.864l3.137-1.802a1 1 0 011.498.867v10.521a1 1 0 01-.502.867l-11.839 6.8a1 1 0 01-.994.001l-9.291-5.314a1 1 0 01-.504-.868v-5.305c0-.006.007-.01.013-.007.005.003.012 0 .012-.007v-.006c0-.004.002-.008.006-.01l7.652-4.396c.007-.004.004-.015-.004-.015a.008.008 0 01-.008-.008l.015-5.201a1 1 0 00-1.5-.87l-5.687 3.277a1 1 0 01-.998 0L6.666 9.7a1 1 0 00-1.499.866v9.4a1 1 0 01-1.496.869l-3.166-1.81a1 1 0 01-.504-.87l.028-16.43A1 1 0 011.527.86l10.845 6.229a1 1 0 00.996 0L24.21.86a1 1 0 011.498.868v16.434a1 1 0 01-.501.867l-5.678 3.27a1 1 0 00.004 1.735l3.132 1.783a1 1 0 00.993-.002l6.685-3.839zM31 7.234a1 1 0 001.514.857l3-1.8A1 1 0 0036 5.434V1.766A1 1 0 0034.486.91l-3 1.8a1 1 0 00-.486.857v3.668z'\r\n                    fill='#007FFF'\r\n                  ></path>\r\n                </svg>\r\n              }\r\n              title='Material UI'\r\n              subheader='v.4.11.0'\r\n            />\r\n            <CardContent>\r\n              <Typography variant='body2' color='textSecondary' component='p'>\r\n                React components for faster and easier web development. Build\r\n                your own design system, or start with Material Design.\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Typography variant='h4' gutterBottom>\r\n        Developer\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <Card className={classes.root}>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar\r\n                  src={`https://skumar-mca.github.io/profile/assets/sunil.png`}\r\n                />\r\n              }\r\n              title='Sunil Kumar | UI Architect'\r\n              subheader={\r\n                <>\r\n                  <a\r\n                    href='https://www.linkedin.com/in/sunil-kumar-83146843/'\r\n                    target='_blank'\r\n                    rel='noopener noreferrer'\r\n                  >\r\n                    <LinkedInIcon />\r\n                  </a>\r\n                  <a\r\n                    href='https://skumar-mca.github.io/profile/'\r\n                    target='_blank'\r\n                    rel='noopener noreferrer'\r\n                  >\r\n                    <AccountBoxIcon />\r\n                  </a>\r\n                </>\r\n              }\r\n            />\r\n            <CardContent>\r\n              <Typography variant='body2' color='textSecondary' component='p'>\r\n                Angular | React | Redux | Node | MongoDB | JavaScript |\r\n                TypeScript | JSON | JQuery | SCSS | CSS\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","const keyPrefix = \"idict_\";\r\n\r\nconst CacheManager = {\r\n  isStringyfied: txt => {\r\n    try {\r\n      JSON.parse(txt);\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  },\r\n  getItem: (key, defaultValue) => {\r\n    key = `${keyPrefix}${key}`;\r\n    const val = window.localStorage.getItem(key);\r\n    if (val) {\r\n      return JSON.parse(val);\r\n    }\r\n\r\n    return defaultValue || null;\r\n  },\r\n  setItem: (key, value) => {\r\n    key = `${keyPrefix}${key}`;\r\n\r\n    if (!CacheManager.isStringyfied(value)) {\r\n      value = JSON.stringify(value);\r\n    }\r\n\r\n    window.localStorage.setItem(key, value);\r\n  },\r\n  removeItem: key => {\r\n    key = `${keyPrefix}${key}`;\r\n    window.localStorage.removeItem(key);\r\n  },\r\n  clear: () => {\r\n    window.localStorage.clear();\r\n  }\r\n};\r\n\r\nexport default CacheManager;\r\n","export const SELECTED_TIMEZONE = 'selected_timezones';\r\nexport const DEFAULT_TIMEZONE_LIST = [\r\n  'Asia/Calcutta',\r\n  'America/New_York',\r\n  'Europe/London'\r\n];\r\n","import CacheManager from 'helpers/cache-manager';\r\nimport { SELECTED_TIMEZONE } from 'helpers/constants';\r\nimport * as types from '../../../action-types';\r\n\r\nconst setSelectedTimeZones = (list, dispatch) => {\r\n  CacheManager.setItem(SELECTED_TIMEZONE, list);\r\n  dispatch({ type: types.SELECTED_TIMEZONES_CHANGED, payload: list });\r\n}\r\n\r\nexport default {\r\n  setSelectedTimeZones\r\n};\r\n","export const SET_LOADER = 'SET_LOADER';\r\nexport const SELECTED_TIMEZONES_CHANGED = 'SELECTED_TIMEZONES_CHANGED';\r\n","export const displayTimeZone = (timeZone) => {\r\n  const timeZoneSplit = timeZone.split('/');\r\n  if (timeZoneSplit.length === 2) {\r\n    if (timeZoneSplit[1] === 'Calcutta') {\r\n      return 'India';\r\n    }\r\n\r\n    return (timeZoneSplit[1] || '').replace('_', ' ');\r\n  }\r\n  return timeZone;\r\n};\r\n","import FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport React, { Component } from 'react';\r\n\r\nclass RenderSelect extends Component {\r\n  render() {\r\n    const { name, label, value, data, onChange } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <FormControl>\r\n          <InputLabel htmlFor='demo-dialog-native'>{label}</InputLabel>\r\n          <Select\r\n            name={name}\r\n            value={value}\r\n            required={true}\r\n            onChange={onChange}\r\n            input={<Input />}\r\n          >\r\n            <option aria-label='Select' value=''>\r\n              Select\r\n            </option>\r\n            {(data || []).map((itm) => {\r\n              return <option value={itm.id}>{itm.label}</option>;\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RenderSelect;\r\n","import Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AvTimerIcon from '@material-ui/icons/AvTimer';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { displayTimeZone } from 'helpers';\r\nimport * as lodash from 'lodash';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\nimport RenderSelect from 'shared-components/Select/index';\r\n\r\nclass HourListComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      hour: null,\r\n      minute: null,\r\n      am: null,\r\n      timezone: null,\r\n      hourOptions: [],\r\n      minOptions: [],\r\n      amPMOptions: [],\r\n      timezoneOptions: [],\r\n      selectedTime: null,\r\n      isValidSelection: false,\r\n      addedTimeZones: [],\r\n      errorMsg: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateMasterData();\r\n  }\r\n\r\n  componentDidUpdate(nextProps) {\r\n    const prevId = this.props.selectedTimeZonesChanged;\r\n    const nextId = nextProps.selectedTimeZonesChanged;\r\n    if (prevId !== nextId) {\r\n      this.populateMasterData();\r\n    }\r\n  }\r\n\r\n  populateMasterData = () => {\r\n    let hourOptions = [];\r\n    for (let i = 0; i < 12; i++) {\r\n      hourOptions.push({ id: i, label: i });\r\n    }\r\n\r\n    let minOptions = [];\r\n    for (let i = 0; i < 60; i += 5) {\r\n      minOptions.push({ id: i, label: i });\r\n    }\r\n\r\n    let amPMOptions = [];\r\n    amPMOptions.push({ id: 'am', label: 'AM' });\r\n    amPMOptions.push({ id: 'pm', label: 'PM' });\r\n\r\n    let addedTimeZones = lodash.get(this.props, 'SelectedTimeZones', []);\r\n    const timezoneOptions = (addedTimeZones || []).map((itm) => {\r\n      return { id: itm, label: displayTimeZone(itm) };\r\n    });\r\n\r\n    this.setState({\r\n      hourOptions,\r\n      minOptions,\r\n      amPMOptions,\r\n      timezoneOptions,\r\n      addedTimeZones\r\n    });\r\n  };\r\n\r\n  checkValidSelection = () => {\r\n    const { timezone, selectedTime } = this.state;\r\n    if (!timezone || !selectedTime) {\r\n      this.setState({ isValidSelection: false });\r\n      return;\r\n    }\r\n\r\n    this.setState({ isValidSelection: true });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value }, () => {\r\n      const { hour, minute, am } = this.state;\r\n      if ((hour || hour === 0) && (minute || minute === 0) && am) {\r\n        this.setState({ errorMsg: false });\r\n      }\r\n\r\n      if (name === 'timezone') {\r\n        this.checkValidSelection();\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSelectTime = (evt) => {\r\n    this.setState({ errorMsg: false });\r\n    const { hour, minute, am } = this.state;\r\n\r\n    if (!(hour || hour === 0) || !(minute || minute === 0) || !am) {\r\n      this.setState({ errorMsg: true });\r\n      return;\r\n    }\r\n\r\n    const TODAY = new Date();\r\n    const selectedDateTime = `${TODAY.getFullYear()}-${\r\n      TODAY.getMonth() + 1\r\n    }-${TODAY.getDate()} ${hour}:${minute}:00 ${am.toUpperCase()}`;\r\n\r\n    this.setState(\r\n      {\r\n        open: false,\r\n        selectedTime: selectedDateTime,\r\n        selectedDateTime: moment(selectedDateTime)\r\n      },\r\n      () => {\r\n        this.checkValidSelection();\r\n      }\r\n    );\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleOpenTimePopup = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  displaySelectedTimeInGivenTimeZone = (currentTimeZone) => {\r\n    const { selectedTime, timezone, hour, minute, am } = this.state;\r\n    if (!selectedTime) {\r\n      return '';\r\n    }\r\n\r\n    let hour24 = am === 'pm' ? hour + 12 : hour;\r\n    const TODAY = moment.tz(new Date(), timezone).hour(hour24).minute(minute);\r\n    const targetZonedTime = TODAY.clone().tz(currentTimeZone);\r\n    return targetZonedTime.format('hh:mm A');\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      hourOptions,\r\n      minOptions,\r\n      amPMOptions,\r\n      hour,\r\n      minute,\r\n      am,\r\n      open,\r\n      selectedDateTime,\r\n      timezone,\r\n      timezoneOptions,\r\n      errorMsg,\r\n      addedTimeZones,\r\n      isValidSelection\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <Dialog\r\n          disableBackdropClick\r\n          disableEscapeKeyDown\r\n          open={open}\r\n          onClose={this.handleCancel}\r\n        >\r\n          <DialogTitle>Select Time</DialogTitle>\r\n          <DialogContent>\r\n            <form className='time-form'>\r\n              <div className='time-form-select'>\r\n                <RenderSelect\r\n                  label='Hour*'\r\n                  name='hour'\r\n                  value={hour}\r\n                  data={hourOptions}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className='time-form-select'>\r\n                <RenderSelect\r\n                  label='Minute*'\r\n                  name='minute'\r\n                  value={minute}\r\n                  data={minOptions}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className='time-form-select'>\r\n                <RenderSelect\r\n                  label='AM/PM*'\r\n                  name='am'\r\n                  value={am}\r\n                  data={amPMOptions}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </form>\r\n            {errorMsg && (\r\n              <span className='text-error'>*Missing required Fields</span>\r\n            )}\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button onClick={this.handleCancel} color='primary'>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleSelectTime} color='primary'>\r\n              Ok\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className='hour-list-accordian'>\r\n          <Accordion>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls='panel1a-content'\r\n              id='panel1a-header'\r\n            >\r\n              <Typography className=''>\r\n                What would be the time there?\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Paper elevation={0}>\r\n                <Grid container spacing={3} className='time-container'>\r\n                  <Grid item xs={6} md={3}>\r\n                    <div className='time-zone-select'>\r\n                      <RenderSelect\r\n                        label='Time Zone'\r\n                        name='timezone'\r\n                        value={timezone}\r\n                        data={timezoneOptions}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} md={3}>\r\n                    <div className='spn-selected-time'>\r\n                      <Chip\r\n                        label={\r\n                          selectedDateTime\r\n                            ? selectedDateTime.format('hh:mm:ss A')\r\n                            : 'No time selected'\r\n                        }\r\n                        disabled\r\n                        variant='outlined'\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} md={3}>\r\n                    <div className='spn-selected-time'>\r\n                      <Button\r\n                        variant='contained'\r\n                        color='primary'\r\n                        size='small'\r\n                        onClick={this.handleOpenTimePopup}\r\n                        startIcon={<AvTimerIcon />}\r\n                      >\r\n                        Change Time\r\n                      </Button>\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} md={12}>\r\n                    <div className='selected-time-msg'>\r\n                      Display current time at other places, when time at{' '}\r\n                      <b>\r\n                        {timezone\r\n                          ? displayTimeZone(timezone)\r\n                          : 'Selected Timezone'}\r\n                      </b>{' '}\r\n                      is{' '}\r\n                      <b>\r\n                        {selectedDateTime\r\n                          ? selectedDateTime.format('hh:mm:ss A')\r\n                          : 'Selected time'}\r\n                      </b>{' '}\r\n                    </div>\r\n\r\n                    {isValidSelection && (\r\n                      <div>\r\n                        <Grid container spacing={3}>\r\n                          {lodash.map(addedTimeZones, (itm) => {\r\n                            return (\r\n                              <Grid item xs={6} md={3}>\r\n                                <Card className=''>\r\n                                  <CardActionArea>\r\n                                    <CardContent>\r\n                                      <Typography\r\n                                        gutterBottom\r\n                                        variant='h5'\r\n                                        component='h2'\r\n                                      >\r\n                                        {this.displaySelectedTimeInGivenTimeZone(\r\n                                          itm\r\n                                        )}\r\n                                      </Typography>\r\n                                      <Typography\r\n                                        variant='body2'\r\n                                        color='textSecondary'\r\n                                        component='p'\r\n                                      >\r\n                                        {displayTimeZone(itm)}\r\n                                      </Typography>\r\n                                    </CardContent>\r\n                                  </CardActionArea>\r\n                                </Card>\r\n                              </Grid>\r\n                            );\r\n                          })}\r\n                        </Grid>\r\n                      </div>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HourListComponent;\r\n","import Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport * as lodash from 'lodash';\r\nimport * as momentTz from 'moment-timezone';\r\nimport React from 'react';\r\n\r\nclass SelectTimeZoneComponent extends React.Component {\r\n  intervalTimer = null;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filteredTimeZones: [],\r\n      timezoneNames: momentTz.tz.names(),\r\n      addedTimeZones: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fillPreSelectTimeZones();\r\n  }\r\n\r\n  fillPreSelectTimeZones = () => {\r\n    const addedTimeZones = lodash.get(this.props, 'SelectedTimeZones', []);\r\n    this.setState({ addedTimeZones: addedTimeZones });\r\n  };\r\n\r\n  handleAddWatches = () => {\r\n    const { addedTimeZones } = this.state;\r\n    this.props.setSelectedTimeZones(addedTimeZones);\r\n    this.props.handleAddWatches(1);\r\n  };\r\n\r\n  handleAddWatchesCancel = () => {\r\n    this.props.handleAddWatches(0);\r\n  };\r\n\r\n  handleSearchTimeZone = (evt) => {\r\n    let { value } = evt.target;\r\n    value = (value || '').toLowerCase();\r\n\r\n    if (!value) {\r\n      this.setState({ filteredTimeZones: [] });\r\n      return;\r\n    }\r\n\r\n    this.doSearch(value);\r\n  };\r\n\r\n  doSearch = lodash.debounce((value) => {\r\n    const { timezoneNames } = this.state;\r\n    const filteredZones = lodash.filter(\r\n      timezoneNames,\r\n      (itm) => (itm || '').toLowerCase().indexOf(value) > -1\r\n    );\r\n    this.setState({ filteredTimeZones: filteredZones });\r\n  }, 500);\r\n\r\n  handleToggle = (value) => {\r\n    const { addedTimeZones } = this.state;\r\n    const currentIndex = addedTimeZones.indexOf(value);\r\n    const newaddedTimeZones = [...addedTimeZones];\r\n\r\n    if (currentIndex === -1) {\r\n      newaddedTimeZones.push(value);\r\n    } else {\r\n      newaddedTimeZones.splice(currentIndex, 1);\r\n    }\r\n\r\n    this.setState({ addedTimeZones: newaddedTimeZones });\r\n  };\r\n\r\n  render() {\r\n    const { addedTimeZones, filteredTimeZones } = this.state;\r\n    return (\r\n      <>\r\n        <Dialog\r\n          fullScreen\r\n          disableBackdropClick\r\n          disableEscapeKeyDown\r\n          open={true}\r\n          onClose={this.handleAddWatchesCancel}\r\n        >\r\n          <DialogTitle>Choose your timezone(s)</DialogTitle>\r\n\r\n          <DialogContent>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  id='outlined-helperText'\r\n                  label='Search timezone'\r\n                  defaultValue=''\r\n                  onKeyUp={this.handleSearchTimeZone}\r\n                  helperText=\"Start typing name of time zone and we'll display matched results\"\r\n                  variant='outlined'\r\n                />\r\n\r\n                <List>\r\n                  {(filteredTimeZones || []).map((value) => {\r\n                    const labelId = `checkbox-list-label-${value}`;\r\n                    return (\r\n                      <ListItem\r\n                        key={value}\r\n                        role={undefined}\r\n                        dense\r\n                        button\r\n                        onClick={() => {\r\n                          this.handleToggle(value);\r\n                        }}\r\n                      >\r\n                        <ListItemIcon>\r\n                          <Checkbox\r\n                            edge='start'\r\n                            checked={addedTimeZones.indexOf(value) !== -1}\r\n                            tabIndex={-1}\r\n                            disableRipple\r\n                            inputProps={{ 'aria-labelledby': labelId }}\r\n                          />\r\n                        </ListItemIcon>\r\n                        <ListItemText id={labelId} primary={value} />\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </List>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <h3>Added Timezones</h3>\r\n\r\n                <List>\r\n                  {(addedTimeZones || []).map((value) => {\r\n                    const labelId = `checkbox-list-label-${value}`;\r\n                    return (\r\n                      <ListItem key={value} role={undefined} dense button>\r\n                        <ListItemText id={labelId} primary={value} />\r\n                        <ListItemSecondaryAction>\r\n                          <IconButton\r\n                            edge='end'\r\n                            aria-label='delete'\r\n                            onClick={() => {\r\n                              this.handleToggle(value);\r\n                            }}\r\n                          >\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </List>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button onClick={this.handleAddWatchesCancel} color='primary'>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleAddWatches} color='primary'>\r\n              Ok\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectTimeZoneComponent;\r\n","import Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { displayTimeZone } from 'helpers';\r\nimport CacheManager from 'helpers/cache-manager';\r\nimport { DEFAULT_TIMEZONE_LIST, SELECTED_TIMEZONE } from 'helpers/constants';\r\nimport * as lodash from 'lodash';\r\nimport * as momentTz from 'moment-timezone';\r\nimport React from 'react';\r\nimport SelectTimeZoneComponent from '../select-time-zone-component/index';\r\n\r\nclass WatchListComponent extends React.Component {\r\n  intervalTimer = null;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      savedSearches: [],\r\n      selectedWatches: [],\r\n      showDeletePopup: false,\r\n      selected: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.displaySelectedTimes();\r\n    this.initializeInterval();\r\n  }\r\n\r\n  displaySelectedTimes = () => {\r\n    const timeZoneList = [];\r\n    let addedTimeZones = CacheManager.getItem(SELECTED_TIMEZONE, []);\r\n    if (addedTimeZones.length === 0) {\r\n      addedTimeZones = DEFAULT_TIMEZONE_LIST;\r\n    }\r\n\r\n    lodash.map(addedTimeZones || [], (itm) => {\r\n      timeZoneList.push({\r\n        zone: itm,\r\n        timeStamp: momentTz.tz(new Date(), itm).format('hh:mm:ss A'),\r\n        timeStampDate: momentTz.tz(new Date(), itm).format('MMM, DD')\r\n      });\r\n    });\r\n\r\n    this.setState({ selectedWatches: timeZoneList });\r\n  };\r\n\r\n  initializeInterval = () => {\r\n    if (this.intervalTimer) {\r\n      window.clearInterval(this.intervalTimer);\r\n    }\r\n    this.intervalTimer = window.setInterval(this.displaySelectedTimes, 1000);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    if (this.intervalTimer) {\r\n      window.clearInterval(this.intervalTimer);\r\n    }\r\n  }\r\n\r\n  handleOpenSetting = () => {\r\n    this.setState({ openTimezonePopup: true });\r\n  };\r\n\r\n  handleAddWatches = (evt) => {\r\n    this.setState({ openTimezonePopup: false });\r\n  };\r\n\r\n  render() {\r\n    const { selectedWatches, openTimezonePopup } = this.state;\r\n    return (\r\n      <>\r\n        {openTimezonePopup && (\r\n          <SelectTimeZoneComponent\r\n            {...this.props}\r\n            handleAddWatches={this.handleAddWatches}\r\n          />\r\n        )}\r\n\r\n        <Paper elevation={0}>\r\n          <div className='div-header'>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={8} md={6}>\r\n                <div className='header-title'>Selected Clocks</div>\r\n              </Grid>\r\n\r\n              <Grid item xs={4} md={6}>\r\n                <span className='setting-icon'>\r\n                  <IconButton\r\n                    aria-label='delete'\r\n                    onClick={this.handleOpenSetting}\r\n                  >\r\n                    <SettingsIcon />\r\n                  </IconButton>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <div className='div-selected-watches'>\r\n            <Grid container spacing={3}>\r\n              {lodash.map(selectedWatches, (itm) => {\r\n                return (\r\n                  <Grid item xs={6} md={2}>\r\n                    <Card className=''>\r\n                      <CardActionArea>\r\n                        <CardContent>\r\n                          <Typography gutterBottom variant='h6' component='h2'>\r\n                            {itm.timeStamp}\r\n                          </Typography>\r\n                          <Typography\r\n                            variant='body2'\r\n                            color='textSecondary'\r\n                            component='p'\r\n                          >\r\n                            {displayTimeZone(itm.zone)}\r\n                            <span className='pull-right'>\r\n                              {' '}\r\n                              <Chip\r\n                                label={itm.timeStampDate}\r\n                                disabled\r\n                                size='small'\r\n                                variant='outlined'\r\n                              />\r\n                            </span>\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </div>\r\n        </Paper>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WatchListComponent;\r\n","import CacheManager from 'helpers/cache-manager';\r\nimport { DEFAULT_TIMEZONE_LIST, SELECTED_TIMEZONE } from 'helpers/constants';\r\nimport React from 'react';\r\nimport HourListComponent from './hour-list-component/index';\r\nimport WatchListComponent from './selected-watches-component/index';\r\nclass TimezoneMonitorComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: '',\r\n      searchResult: null,\r\n      errorMsg: '',\r\n      selectedWatches: [],\r\n      noRecordFound: false,\r\n      openTimezonePopup: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let addedTimeZones = CacheManager.getItem(SELECTED_TIMEZONE, []);\r\n    if (addedTimeZones.length === 0) {\r\n      addedTimeZones = DEFAULT_TIMEZONE_LIST;\r\n    }\r\n\r\n    this.props.setSelectedTimeZones(addedTimeZones);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <WatchListComponent {...this.props} />\r\n        <HourListComponent {...this.props} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimezoneMonitorComponent;\r\n","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport TimeZoneActions from '../actions/timezone-actions';\r\nimport TimezoneMonitorComponent from '../components/timezone-component/index';\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    SelectedTimeZones: state.timezoneReducer.SelectedTimeZones,\r\n    selectedTimeZonesChanged: state.timezoneReducer.selectedTimeZonesChanged\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setSelectedTimeZones: (list) => {\r\n    TimeZoneActions.setSelectedTimeZones(list, dispatch);\r\n  }\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(TimezoneMonitorComponent)\r\n);\r\n","import CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppLayout from 'components/layout-component/index';\r\nimport CustomLoader from 'components/loader-component/index';\r\nimport HomeComponent from 'modules/home/containers/home.container';\r\nimport InfoComponent from 'modules/info/index';\r\nimport TimezoneComponent from 'modules/timezone-monitor/containers/timezone.container';\r\nimport React, { Suspense } from 'react';\r\nimport { Switch } from 'react-router';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24 // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginRight: 36\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none'\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9)\r\n    }\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto'\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column'\r\n  },\r\n  fixedHeight: {\r\n    height: 240\r\n  }\r\n}));\r\n\r\nexport const AppRoutes = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <div>\r\n          <CssBaseline />\r\n          <AppLayout />\r\n          <main className='main-content'>\r\n            <div className={classes.appBarSpacer} />\r\n            <Grid container>\r\n              <Grid item xs={12} md={12} lg={12}>\r\n                <Suspense fallback={<CustomLoader />}>\r\n                  <Route exact path='/' component={HomeComponent} />\r\n                  <Route\r\n                    exact\r\n                    path='/time-zone-monitor'\r\n                    component={TimezoneComponent}\r\n                  />\r\n                  <Route path='/info' component={InfoComponent} />\r\n                </Suspense>\r\n              </Grid>\r\n            </Grid>\r\n          </main>\r\n        </div>\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default AppRoutes;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport AppRoutes from './app.routes.js';\r\nimport CustomLoader from './components/loader-component/index';\r\nclass App extends Component {\r\n  render() {\r\n    const { loading } = this.props;\r\n    return (\r\n      <div className='App'>\r\n        {loading && <CustomLoader />}\r\n        <AppRoutes />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { connect } from 'react-redux';\r\nimport App from './App';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.commonReducer.loading\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","import { merge } from 'lodash';\r\n\r\nconst config = {\r\n  all: {\r\n    env: process.env.NODE_ENV || 'development',\r\n    isDev: true,\r\n    basename: process.env.PUBLIC_PATH,\r\n    isBrowser: typeof window !== 'undefined'\r\n  },\r\n  test: {},\r\n  development: {},\r\n  production: {}\r\n};\r\n\r\nexport default merge(config.all, config[config.all.env]);\r\n","import * as type from '../action-types';\r\nconst initialState = {\r\n    loading: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case type.SET_LOADER: return { ...state, loading: action.flag };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","const initialState = {\r\n  searchWord: {}\r\n};\r\n\r\nconst homeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default homeReducer;\r\n","import * as type from 'action-types';\r\nconst initialState = {\r\n  SelectedTimeZones: [],\r\n  selectedTimeZonesChanged: 0\r\n};\r\n\r\nconst timezoneReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case type.SELECTED_TIMEZONES_CHANGED:\r\n      return {\r\n        ...state,\r\n        SelectedTimeZones: action.payload,\r\n        selectedTimeZonesChanged: state.selectedTimeZonesChanged + 1\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default timezoneReducer;\r\n","import commonReducer from 'helpers/common.reducer';\r\nimport homeReducer from 'modules/home/reducers/home.reducer';\r\nimport timezoneReducer from 'modules/timezone-monitor/reducers/timezone.reducer';\r\nimport { combineReducers } from 'redux';\r\nimport { reducer as form } from 'redux-form';\r\n\r\nconst reducers = {\r\n  form,\r\n  commonReducer,\r\n  homeReducer,\r\n  timezoneReducer\r\n};\r\n\r\nexport default combineReducers(reducers);\r\n","import { compose, createStore } from 'redux';\r\nimport config from './global/config';\r\nimport reducer from './root-reducer';\r\nimport { translations } from './translations';\r\n\r\n// Check for dev env, if false hide extensions like redux\r\nconst { isDev, isBrowser } = config;\r\nconst devtools =\r\n  isDev && isBrowser && window.devToolsExtension\r\n    ? window.devToolsExtension\r\n    : () => (fn) => fn;\r\n\r\nlet store = null;\r\n\r\nconst configureStore = (initialState = {}, services = {}) => {\r\n  const enhancers = [devtools()];\r\n  store = createStore(reducer, initialState, compose(...enhancers));\r\n  return store;\r\n};\r\n\r\nexport { configureStore, store };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './app.container';\r\nimport './index.css';\r\nimport { configureStore } from './store';\r\nconst store = configureStore({}, {});\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}