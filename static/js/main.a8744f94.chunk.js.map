{"version":3,"sources":["assets/images/clocks.jpg","components/layout-component/index.js","components/loader-component/index.js","action-types.js","modules/home/actions/home-actions.js","modules/home/components/home-component/index.js","modules/home/containers/home.container.js","modules/info/index.js","helpers/cache-manager.js","helpers/constants.js","modules/timezone-monitor/actions/timezone-actions.js","helpers/index.js","shared-components/Select/index.js","modules/timezone-monitor/components/timezone-component/hour-list-component/index.js","modules/timezone-monitor/components/timezone-component/select-time-zone-component/index.js","modules/timezone-monitor/components/timezone-component/selected-watches-component/index.js","modules/timezone-monitor/components/timezone-component/index.js","modules/timezone-monitor/containers/timezone.container.js","app.routes.js","App.js","app.container.js","helpers/common.actions.js","helpers/interceptor.js","global/config.js","helpers/common.reducer.js","modules/home/reducers/home.reducer.js","modules/timezone-monitor/reducers/timezone.reducer.js","root-reducer.js","translations.js","assets/i18n/en.js","store.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","width","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","AppLayout","classes","React","useState","open","setOpen","AppBar","className","clsx","Toolbar","IconButton","edge","color","aria-label","onClick","Typography","component","variant","noWrap","to","backdrop","CustomerLoader","Backdrop","CircularProgress","newSearchWordAdded","dispatch","type","HomeComponent","props","state","value","searchResult","errorMsg","noRecordFound","Grid","item","xs","md","lg","Card","CardActionArea","CardMedia","image","ClockImage","CardContent","gutterBottom","CardActions","Button","size","Component","withRouter","connect","searchWord","homeReducer","newSearchAdded","cb","HomeActions","getImg","marginBottom","media","expand","transform","marginLeft","shortest","expandOpen","avatar","backgroundColor","red","InfoComponent","CardHeader","Avatar","src","subheader","href","target","CacheManager","isStringyfied","txt","JSON","parse","e","getItem","key","defaultValue","val","window","localStorage","setItem","stringify","removeItem","clear","DEFAULT_TIMEZONE_LIST","list","payload","displayTimeZone","timeZone","timeZoneSplit","split","length","replace","RenderSelect","this","name","label","data","onChange","FormControl","InputLabel","htmlFor","Select","required","input","Input","map","itm","id","HourListComponent","populateMasterData","hourOptions","i","push","minOptions","amPMOptions","addedTimeZones","lodash","timezoneOptions","setState","checkValidSelection","timezone","selectedTime","isValidSelection","handleChange","event","hour","minute","am","handleSelectTime","evt","TODAY","Date","selectedDateTime","getFullYear","getMonth","getDate","toUpperCase","moment","handleCancel","handleOpenTimePopup","displaySelectedTimeInGivenTimeZone","currentTimeZone","hour24","tz","clone","format","nextProps","selectedTimeZonesChanged","Dialog","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","DialogActions","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","Paper","elevation","Chip","disabled","startIcon","SelectTimeZoneComponent","intervalTimer","fillPreSelectTimeZones","handleAddWatches","setSelectedTimeZones","handleAddWatchesCancel","handleSearchTimeZone","toLowerCase","doSearch","filteredTimeZones","timezoneNames","filteredZones","indexOf","handleToggle","currentIndex","newaddedTimeZones","splice","momentTz","names","fullScreen","TextField","onKeyUp","helperText","List","labelId","ListItem","role","undefined","dense","button","ListItemIcon","Checkbox","checked","tabIndex","disableRipple","inputProps","ListItemText","primary","ListItemSecondaryAction","WatchListComponent","displaySelectedTimes","timeZoneList","zone","timeStamp","timeStampDate","selectedWatches","initializeInterval","clearInterval","setInterval","handleOpenSetting","openTimezonePopup","savedSearches","showDeletePopup","selected","TimezoneMonitorComponent","SelectedTimeZones","timezoneReducer","TimeZoneActions","AppRoutes","Switch","CssBaseline","fallback","exact","path","TimezoneComponent","App","loading","commonReducer","flag","SilentRequestURLs","IgnoreResponseInterceptorForThisList","isSilentAPICall","url","currentRequests","setupInterceptors","store","axios","interceptors","request","use","config","commonActions","Promise","resolve","reject","headers","Authorization","response","isIgnoreURL","updateData","error","status","all","env","process","isDev","basename","PUBLIC_PATH","isBrowser","test","development","production","merge","initialState","action","reducers","i18nReducer","form","combineReducers","translations","text","devtools","devToolsExtension","fn","dictionaries","languages","code","enhancers","createStore","reducer","compose","i18nActions","setDictionaries","setLanguages","setCurrentLanguage","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8744f94.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clocks.7bafc0c6.jpg\";","import AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst drawerWidth = 0;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\n\r\nexport default function AppLayout() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\" onClick={handleDrawerOpen} className={clsx(classes.menuButton, open && classes.menuButtonHidden)}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                        <Link to={'/'} className=\"white-link\"><IconButton color=\"inherit\"><HomeIcon /></IconButton></Link>\r\n                        <Link to={'/time-zone-monitor'} className=\"white-link\" title=\"Time zone monitor\"><IconButton color=\"inherit\"><ScheduleIcon /></IconButton></Link>\r\n                    </Typography>\r\n\r\n                    <Link to={'/info'} className=\"white-link\"><IconButton color=\"inherit\"><InfoIcon /></IconButton></Link>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}\r\n","import Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from \"react\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nexport default function CustomerLoader() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"loader\">\r\n            <Backdrop className={classes.backdrop} open={true}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n}\r\n\r\n","export const SET_LOADER = \"SET_LOADER\";\r\nexport const SET_SEARCH_WORD = \"SET_SEARCH_WORD\";\r\nexport const NEW_SEARCH_ADDED = \"NEW_SEARCH_ADDED\";\r\nexport const SELECTED_TIMEZONES_CHANGED = \"SELECTED_TIMEZONES_CHANGED\";\r\n","import * as types from '../../../action-types';\r\n\r\nconst newSearchWordAdded = (dispatch) => {\r\n  dispatch({ type: types.NEW_SEARCH_ADDED })\r\n}\r\n\r\nexport default {\r\n  newSearchWordAdded\r\n};\r\n","import Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ClockImage from 'assets/images/clocks.jpg';\r\nimport React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass HomeComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            searchResult: null,\r\n            errorMsg: '',\r\n            noRecordFound: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const classes = {};\r\n        return (\r\n            <>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} md={12} lg={12}>\r\n                        <div className=\"home-cards\">\r\n                            <Link to={'/time-zone-monitor'} title=\"Time zone monitor\">\r\n                                <Card className={classes.root}>\r\n                                    <CardActionArea>\r\n                                        <CardMedia\r\n                                            className=\"home-card-img\"\r\n                                            image={ClockImage}\r\n                                            title=\"Multi zone clocks\"\r\n                                        />\r\n                                        <CardContent>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">Multi zone clocks</Typography>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                Display clocks of multiple geographical locations. Save your favorite locations. Calculate time at different timezone, etc.\r\n                                      </Typography>\r\n                                        </CardContent>\r\n                                    </CardActionArea>\r\n                                    <CardActions>\r\n                                        <Button size=\"small\" color=\"primary\">Explore</Button>\r\n\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Link>\r\n                        </div>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeComponent;\r\n","import { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport HomeActions from \"../actions/home-actions\";\r\nimport HomeComponent from \"../components/home-component/index\";\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchWord: state.homeReducer.searchWord,\r\n    newSearchAdded: state.homeReducer.newSearchAdded\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  searchWord: (searchWord, cb) => {\r\n    HomeActions.searchWord(searchWord, cb, dispatch);\r\n  },\r\n  newSearchWordAdded: () => {\r\n    HomeActions.newSearchWordAdded(dispatch);\r\n  },\r\n  getImg: (searchWord, cb) => {\r\n    HomeActions.getImg(searchWord, cb)\r\n  }\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HomeComponent));\r\n","import { Grid } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginBottom: 25\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nexport default function InfoComponent() {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Typography variant=\"h4\" gutterBottom>Tech. Stack</Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Card className={classes.root}>\r\n                        <CardHeader\r\n                            avatar={<Avatar src={`https://cdn.iconscout.com/icon/free/png-128/react-3-1175109.png`} />}\r\n                            title=\"React Js\"\r\n                            subheader=\"v.16.13.1\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                React is a declarative, efficient, and flexible JavaScript library for building user interfaces.\r\n                            </Typography>\r\n\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                    <Card className={classes.root}>\r\n                        <CardHeader\r\n                            avatar={<Avatar src={`https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/386/square_256/redux.png`} />}\r\n                            title=\"Redux\"\r\n                            subheader=\"v.4.0.5\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Redux is a predictable state container for JavaScript apps.\r\n                      </Typography>\r\n\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12} md={6}>\r\n                    <Card className={classes.root}>\r\n                        <CardHeader\r\n                            avatar={<Avatar src={`https://material-ui.com/static/logo_raw.svg`} />}\r\n                            title=\"Material UI\"\r\n                            subheader=\"v.4.11.0\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                React components for faster and easier web development. Build your own design system, or start with Material Design.\r\n                      </Typography>\r\n\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Typography variant=\"h4\" gutterBottom>Developer</Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Card className={classes.root}>\r\n                        <CardHeader\r\n                            avatar={<Avatar src={`https://media-exp1.licdn.com/dms/image/C4D03AQFuvR5Qmllc6g/profile-displayphoto-shrink_200_200/0?e=1601510400&v=beta&t=u4aC5-_Yep5rThMSM6UdsmeIfh_1p1FS0zkuBiGY0SM`} />}\r\n                            title=\"Sunil Kumar | UI Architect\"\r\n                            subheader={\r\n                                <>\r\n                                    <a href=\"https://www.linkedin.com/in/sunil-kumar-83146843/\" target=\"_blank\"><LinkedInIcon /></a>\r\n                                    <a href=\"https://sunilkumar-profile.web.app/profile\" target=\"_blank\"><AccountBoxIcon /></a>\r\n                                </>\r\n                            }\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Angular | React | Redux | Node | MongoDB | JavaScript | JSON | JQuery\r\n                            </Typography>\r\n\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n    );\r\n}\r\n","const keyPrefix = \"idict_\";\r\n\r\nconst CacheManager = {\r\n  isStringyfied: txt => {\r\n    try {\r\n      JSON.parse(txt);\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  },\r\n  getItem: (key, defaultValue) => {\r\n    key = `${keyPrefix}${key}`;\r\n    const val = window.localStorage.getItem(key);\r\n    if (val) {\r\n      return JSON.parse(val);\r\n    }\r\n\r\n    return defaultValue || null;\r\n  },\r\n  setItem: (key, value) => {\r\n    key = `${keyPrefix}${key}`;\r\n\r\n    if (!CacheManager.isStringyfied(value)) {\r\n      value = JSON.stringify(value);\r\n    }\r\n\r\n    window.localStorage.setItem(key, value);\r\n  },\r\n  removeItem: key => {\r\n    key = `${keyPrefix}${key}`;\r\n    window.localStorage.removeItem(key);\r\n  },\r\n  clear: () => {\r\n    window.localStorage.clear();\r\n  }\r\n};\r\n\r\nexport default CacheManager;\r\n","export const ID_TOKEN = 'adal.idtoken';\r\nexport const DATE_FORMAT = \"MM/DD/YYYY\";\r\nexport const SAVED_SEARCH = 'saved_search';\r\nexport const SELECTED_TIMEZONE = 'selected_timezones';\r\nexport const DEFAULT_TIMEZONE_LIST = ['Asia/Calcutta', 'America/New_York', 'Europe/London']\r\nexport const MAX_CACHED_ITEMS = 20;\r\n","import CacheManager from 'helpers/cache-manager';\r\nimport { SELECTED_TIMEZONE } from 'helpers/constants';\r\nimport * as types from '../../../action-types';\r\n\r\nconst setSelectedTimeZones = (list, dispatch) => {\r\n  CacheManager.setItem(SELECTED_TIMEZONE, list);\r\n  dispatch({ type: types.SELECTED_TIMEZONES_CHANGED, payload: list });\r\n}\r\n\r\nexport default {\r\n  setSelectedTimeZones\r\n};\r\n","import * as lodash from 'lodash';\r\nimport moment from \"moment\";\r\nimport CacheManager from './cache-manager';\r\nimport { DATE_FORMAT, MAX_CACHED_ITEMS, SAVED_SEARCH } from './constants';\r\nexport const splitPascalString = str => {\r\n  return (str || \"\").replace(/([a-z0-9])([A-Z])/g, \"$1 $2\");\r\n};\r\n\r\nexport const formattedDate = (dt, format) => {\r\n  if (!dt) {\r\n    return \"\";\r\n  }\r\n\r\n  format = format || DATE_FORMAT;\r\n  return moment(dt).format(format);\r\n};\r\n\r\n\r\nexport const slugify = (text) => {\r\n  return (text || '')\r\n    .toString()                     // Cast to string\r\n    .toLowerCase()                  // Convert the string to lowercase letters\r\n    .trim()                         // Remove whitespace from both sides of a string\r\n    .replace(/\\s+/g, '-')           // Replace spaces with -\r\n    .replace(/\\//g, '-')           // Replace / with -\r\n    .replace(/&/g, '-and-')           // Replace & with 'and'\r\n    .replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\r\n    .replace(/\\-\\-+/g, '-')      // Replace multiple - with single -\r\n    .replace(/^-+/, \"\") // trim - from start of text\r\n    .replace(/-+$/, \"\") // trim - from end of text\r\n}\r\n\r\nexport const copyToClipboard = (copyText, cb) => {\r\n  copyToClip(copyText);\r\n  cb(true);\r\n}\r\n\r\nconst copyToClip = (str) => {\r\n  function listener(e) {\r\n    e.clipboardData.setData(\"text/html\", str);\r\n    e.clipboardData.setData(\"text/plain\", str);\r\n    e.preventDefault();\r\n  }\r\n  document.addEventListener(\"copy\", listener);\r\n  document.execCommand(\"copy\");\r\n  document.removeEventListener(\"copy\", listener);\r\n};\r\n\r\n\r\nexport const ManageSearchResult = {\r\n  add: (searchTerm, result) => {\r\n    const savedSearches = CacheManager.getItem(SAVED_SEARCH, []);\r\n    const existingIndex = lodash.findIndex(savedSearches, itm => itm.key === searchTerm);\r\n\r\n    const content = {\r\n      key: searchTerm,\r\n      result: result,\r\n      timeStamp: new Date()\r\n    };\r\n\r\n    if (existingIndex === -1) {\r\n      if ((savedSearches || []).length >= MAX_CACHED_ITEMS) {\r\n        savedSearches.shift();\r\n      }\r\n      savedSearches.push(content);\r\n    }\r\n    else {\r\n      savedSearches[existingIndex] = content;\r\n    }\r\n\r\n    CacheManager.setItem(SAVED_SEARCH, savedSearches);\r\n  },\r\n  remove: (searchTerm) => {\r\n    const savedSearches = CacheManager.getItem(SAVED_SEARCH, []);\r\n    const existingIndex = lodash.findIndex(savedSearches, itm => itm.key === searchTerm);\r\n    if (existingIndex > -1) {\r\n      savedSearches.splice(existingIndex, 1);\r\n      CacheManager.setItem(SAVED_SEARCH, savedSearches);\r\n    }\r\n  },\r\n  get: (searchTerm) => {\r\n    const savedSearches = CacheManager.getItem(SAVED_SEARCH, []);\r\n    const existingIndex = lodash.findIndex(savedSearches, itm => itm.key === searchTerm);\r\n    if (existingIndex > -1) {\r\n      return savedSearches[existingIndex];\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport const displayTimeZone = (timeZone) => {\r\n  const timeZoneSplit = timeZone.split('/');\r\n  if (timeZoneSplit.length == 2) {\r\n    if (timeZoneSplit[1] === 'Calcutta') {\r\n      return 'India';\r\n    }\r\n\r\n    return (timeZoneSplit[1] || '').replace('_', ' ');\r\n  }\r\n  return timeZone;\r\n}\r\n","import FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport React, { Component } from \"react\";\r\n\r\nclass RenderSelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { name, label, value, data, onChange } = this.props;\r\n\r\n        return <>\r\n            <FormControl>\r\n                <InputLabel htmlFor=\"demo-dialog-native\">{label}</InputLabel>\r\n                <Select\r\n                    name={name}\r\n                    value={value}\r\n                    required={true}\r\n                    onChange={onChange}\r\n                    input={<Input />}\r\n                >\r\n                    <option aria-label=\"Select\" value=\"\" >Select</option>\r\n                    {(data || []).map(itm => {\r\n                        return <option value={itm.id}>{itm.label}</option>\r\n                        return\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default RenderSelect;\r\n","import Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AvTimerIcon from '@material-ui/icons/AvTimer';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { displayTimeZone } from 'helpers';\r\nimport * as lodash from 'lodash';\r\nimport moment from 'moment';\r\nimport React from \"react\";\r\nimport RenderSelect from 'shared-components/Select/index';\r\n\r\nclass HourListComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            hour: null,\r\n            minute: null,\r\n            am: null,\r\n            timezone: null,\r\n            hourOptions: [],\r\n            minOptions: [],\r\n            amPMOptions: [],\r\n            timezoneOptions: [],\r\n            selectedTime: null,\r\n            isValidSelection: false,\r\n            addedTimeZones: [],\r\n            errorMsg: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateMasterData();\r\n    }\r\n\r\n    componentDidUpdate(nextProps) {\r\n        const prevId = this.props.selectedTimeZonesChanged;\r\n        const nextId = nextProps.selectedTimeZonesChanged;\r\n        if (prevId !== nextId) {\r\n            this.populateMasterData();\r\n        }\r\n    }\r\n\r\n    populateMasterData = () => {\r\n        let hourOptions = [];\r\n        for (let i = 0; i < 12; i++) {\r\n            hourOptions.push({ id: i, label: i });\r\n        }\r\n\r\n        let minOptions = [];\r\n        for (let i = 0; i < 60; i += 5) {\r\n            minOptions.push({ id: i, label: i });\r\n        }\r\n\r\n        let amPMOptions = [];\r\n        amPMOptions.push({ id: 'am', label: 'AM' });\r\n        amPMOptions.push({ id: 'pm', label: 'PM' });\r\n\r\n        let addedTimeZones = lodash.get(this.props, 'SelectedTimeZones', []);\r\n        const timezoneOptions = (addedTimeZones || []).map(itm => { return { id: itm, label: displayTimeZone(itm) } })\r\n\r\n        this.setState({ hourOptions, minOptions, amPMOptions, timezoneOptions, addedTimeZones });\r\n    }\r\n\r\n    checkValidSelection = () => {\r\n        const { timezone, selectedTime } = this.state;\r\n        if (!timezone || !selectedTime) {\r\n            this.setState({ isValidSelection: false });\r\n            return;\r\n        }\r\n\r\n        this.setState({ isValidSelection: true });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value }, () => {\r\n            const { hour, minute, am } = this.state;\r\n            if (hour && minute && am) {\r\n                this.setState({ errorMsg: false });\r\n            }\r\n\r\n            if (name === 'timezone') {\r\n                this.checkValidSelection();\r\n            }\r\n        });\r\n    };\r\n\r\n    handleSelectTime = (evt) => {\r\n        this.setState({ errorMsg: false });\r\n        const { hour, minute, am } = this.state;\r\n        if (!hour || !minute || !am) {\r\n            this.setState({ errorMsg: true });\r\n            return;\r\n        }\r\n\r\n        const TODAY = new Date();\r\n        const selectedDateTime = `${TODAY.getFullYear()}-${TODAY.getMonth() + 1}-${TODAY.getDate()} ${hour}:${minute}:00 ${am.toUpperCase()}`;\r\n\r\n        this.setState({ open: false, selectedTime: selectedDateTime, selectedDateTime: moment(selectedDateTime) }, () => {\r\n            this.checkValidSelection();\r\n        });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleOpenTimePopup = () => {\r\n        this.setState({ open: true });\r\n    }\r\n\r\n    displaySelectedTimeInGivenTimeZone = (currentTimeZone) => {\r\n        const { selectedTime, timezone, hour, minute, am } = this.state;\r\n        if (!selectedTime) {\r\n            return '';\r\n        }\r\n\r\n        let hour24 = am === 'pm' ? hour + 12 : hour;\r\n        const TODAY = moment.tz(new Date(), timezone).hour(hour24).minute(minute);\r\n        const targetZonedTime = TODAY.clone().tz(currentTimeZone);\r\n        return targetZonedTime.format('hh:mm A');\r\n    }\r\n\r\n    render() {\r\n        const { hourOptions, minOptions, amPMOptions, hour, minute, am, open, selectedTime, selectedDateTime, timezone, timezoneOptions, errorMsg, addedTimeZones, isValidSelection } = this.state;\r\n        return <>\r\n\r\n            <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={this.handleCancel}>\r\n                <DialogTitle>Select Time</DialogTitle>\r\n                <DialogContent>\r\n                    <form className=\"time-form\">\r\n                        <div className=\"time-form-select\">\r\n                            <RenderSelect label=\"Hour*\" name=\"hour\" value={hour} data={hourOptions} onChange={this.handleChange} />\r\n                        </div>\r\n\r\n                        <div className=\"time-form-select\">\r\n                            <RenderSelect label=\"Minute*\" name=\"minute\" value={minute} data={minOptions} onChange={this.handleChange} />\r\n                        </div>\r\n\r\n                        <div className=\"time-form-select\">\r\n                            <RenderSelect label=\"AM/PM*\" name=\"am\" value={am} data={amPMOptions} onChange={this.handleChange} />\r\n                        </div>\r\n\r\n                    </form>\r\n                    {errorMsg && <span className=\"text-error\">*Missing required Fields</span>}\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color=\"primary\">Cancel</Button>\r\n                    <Button onClick={this.handleSelectTime} color=\"primary\">Ok</Button>\r\n\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <div className=\"hour-list-accordian\">\r\n                <Accordion>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\" >\r\n                        <Typography className=\"\">Calculate time at other locations, for given time</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Paper elevation={0} >\r\n                            <Grid container spacing={3} className=\"time-container\">\r\n                                <Grid item xs={6} md={3}>\r\n                                    <div className=\"time-zone-select\">\r\n                                        <RenderSelect label=\"Time Zone\" name=\"timezone\" value={timezone} data={timezoneOptions} onChange={this.handleChange} />\r\n                                    </div>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6} md={3}>\r\n                                    <div className=\"spn-selected-time\">\r\n                                        <Chip label={selectedDateTime ? selectedDateTime.format('hh:mm:ss A') : 'No time selected'} disabled variant=\"outlined\" />\r\n                                    </div>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6} md={3}>\r\n                                    <div className=\"spn-selected-time\">\r\n                                        <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={this.handleOpenTimePopup} startIcon={<AvTimerIcon />}>Change Time</Button>\r\n                                    </div>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} md={12}>\r\n                                    <div className=\"selected-time-msg\">Display current time at other places, when time at <b>{timezone ? displayTimeZone(timezone) : 'Selected Timezone'}</b> is <b>{selectedDateTime ? selectedDateTime.format('hh:mm:ss A') : 'Selected time'}</b> </div>\r\n\r\n\r\n                                    {isValidSelection && <div>\r\n                                        <Grid container spacing={3}>\r\n                                            {lodash.map(addedTimeZones, itm => {\r\n                                                return <Grid item xs={6} md={3}>\r\n                                                    <Card className=\"\">\r\n                                                        <CardActionArea>\r\n                                                            <CardContent>\r\n                                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">{this.displaySelectedTimeInGivenTimeZone(itm)}</Typography>\r\n                                                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                                    {displayTimeZone(itm)}\r\n                                                                </Typography>\r\n                                                            </CardContent>\r\n                                                        </CardActionArea>\r\n                                                    </Card>\r\n                                                </Grid>\r\n                                            })}\r\n\r\n                                        </Grid>\r\n                                    </div>\r\n                                    }\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n\r\n            </div>\r\n\r\n        </>\r\n    }\r\n}\r\n\r\nexport default HourListComponent;\r\n","import Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport * as lodash from 'lodash';\r\nimport * as momentTz from 'moment-timezone';\r\nimport React from 'react';\r\n\r\nclass SelectTimeZoneComponent extends React.Component {\r\n    intervalTimer = null;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filteredTimeZones: [],\r\n            timezoneNames: momentTz.tz.names(),\r\n            addedTimeZones: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fillPreSelectTimeZones();\r\n    }\r\n\r\n    fillPreSelectTimeZones = () => {\r\n        const addedTimeZones = lodash.get(this.props, 'SelectedTimeZones', []);\r\n        this.setState({ addedTimeZones: addedTimeZones });\r\n    }\r\n\r\n    handleAddWatches = () => {\r\n        const { addedTimeZones } = this.state;\r\n        this.props.setSelectedTimeZones(addedTimeZones);\r\n        this.props.handleAddWatches(1);\r\n    }\r\n\r\n    handleAddWatchesCancel = () => {\r\n        this.props.handleAddWatches(0);\r\n    }\r\n\r\n    handleSearchTimeZone = (evt) => {\r\n        let { value } = evt.target;\r\n        value = (value || '').toLowerCase();\r\n\r\n        if (!value) {\r\n            this.setState({ filteredTimeZones: [] })\r\n            return;\r\n        }\r\n\r\n        this.doSearch(value);\r\n    }\r\n\r\n    doSearch = lodash.debounce((value) => {\r\n        const { timezoneNames } = this.state;\r\n        const filteredZones = lodash.filter(timezoneNames, (itm) => (itm || '').toLowerCase().indexOf(value) > -1);\r\n        this.setState({ filteredTimeZones: filteredZones })\r\n    }, 500);\r\n\r\n    handleToggle = (value) => {\r\n        const { addedTimeZones } = this.state;\r\n        const currentIndex = addedTimeZones.indexOf(value);\r\n        const newaddedTimeZones = [...addedTimeZones];\r\n\r\n        if (currentIndex === -1) {\r\n            newaddedTimeZones.push(value);\r\n        } else {\r\n            newaddedTimeZones.splice(currentIndex, 1);\r\n        }\r\n\r\n        this.setState({ addedTimeZones: newaddedTimeZones });\r\n    }\r\n\r\n    render() {\r\n        const { errorMsg, addedTimeZones, filteredTimeZones } = this.state;\r\n        return <>\r\n            <Dialog fullScreen disableBackdropClick disableEscapeKeyDown open={true} onClose={this.handleAddWatchesCancel}>\r\n                <DialogTitle>Choose your timezone(s)</DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                id=\"outlined-helperText\"\r\n                                label=\"Search timezone\"\r\n                                defaultValue=\"\"\r\n                                onKeyUp={this.handleSearchTimeZone}\r\n                                helperText=\"Start typing name of time zone and we'll display matched results\"\r\n                                variant=\"outlined\"\r\n                            />\r\n\r\n                            <List >\r\n                                {(filteredTimeZones || []).map((value) => {\r\n                                    const labelId = `checkbox-list-label-${value}`;\r\n                                    return (\r\n                                        <ListItem key={value} role={undefined} dense button onClick={() => { this.handleToggle(value) }}>\r\n                                            <ListItemIcon>\r\n                                                <Checkbox\r\n                                                    edge=\"start\"\r\n                                                    checked={addedTimeZones.indexOf(value) !== -1}\r\n                                                    tabIndex={-1}\r\n                                                    disableRipple\r\n                                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                                />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText id={labelId} primary={value} />\r\n\r\n                                        </ListItem>\r\n                                    );\r\n                                })}\r\n                            </List>\r\n\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            <h3>Added Timezones</h3>\r\n\r\n                            <List >\r\n                                {(addedTimeZones || []).map((value) => {\r\n                                    const labelId = `checkbox-list-label-${value}`;\r\n                                    return (\r\n                                        <ListItem key={value} role={undefined} dense button>\r\n\r\n                                            <ListItemText id={labelId} primary={value} />\r\n                                            <ListItemSecondaryAction>\r\n                                                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => { this.handleToggle(value) }} >\r\n                                                    <DeleteIcon />\r\n                                                </IconButton>\r\n                                            </ListItemSecondaryAction>\r\n\r\n                                        </ListItem>\r\n                                    );\r\n                                })}\r\n                            </List>\r\n\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={this.handleAddWatchesCancel} color=\"primary\">Cancel</Button>\r\n                    <Button onClick={this.handleAddWatches} color=\"primary\">Ok</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default SelectTimeZoneComponent;\r\n","import Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { displayTimeZone } from 'helpers';\r\nimport CacheManager from 'helpers/cache-manager';\r\nimport { DEFAULT_TIMEZONE_LIST, SELECTED_TIMEZONE } from 'helpers/constants';\r\nimport * as lodash from 'lodash';\r\nimport * as momentTz from 'moment-timezone';\r\nimport React from 'react';\r\nimport SelectTimeZoneComponent from '../select-time-zone-component/index';\r\n\r\nclass WatchListComponent extends React.Component {\r\n    intervalTimer = null;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            savedSearches: [],\r\n            selectedWatches: [],\r\n            showDeletePopup: false,\r\n            selected: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.displaySelectedTimes();\r\n        this.initializeInterval();\r\n    }\r\n\r\n    displaySelectedTimes = () => {\r\n        const timeZoneList = [];\r\n        let addedTimeZones = CacheManager.getItem(SELECTED_TIMEZONE, []);\r\n        if (addedTimeZones.length === 0) {\r\n            addedTimeZones = DEFAULT_TIMEZONE_LIST;\r\n        }\r\n\r\n        lodash.map(addedTimeZones || [], itm => {\r\n            timeZoneList.push({\r\n                zone: itm,\r\n                timeStamp: momentTz.tz(new Date(), itm).format('hh:mm:ss A'),\r\n                timeStampDate: momentTz.tz(new Date(), itm).format('MMM, DD'),\r\n            })\r\n        })\r\n\r\n        this.setState({ selectedWatches: timeZoneList });\r\n    }\r\n\r\n    initializeInterval = () => {\r\n        if (this.intervalTimer) {\r\n            window.clearInterval(this.intervalTimer);\r\n        }\r\n        this.intervalTimer = window.setInterval(this.displaySelectedTimes, 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.intervalTimer) {\r\n            window.clearInterval(this.intervalTimer);\r\n        }\r\n    }\r\n\r\n    handleOpenSetting = () => {\r\n        this.setState({ openTimezonePopup: true });\r\n    }\r\n\r\n    handleAddWatches = (evt) => {\r\n        this.setState({ openTimezonePopup: false });\r\n    }\r\n\r\n    render() {\r\n        const { selectedWatches, openTimezonePopup, errorMsg, filteredTimeZones } = this.state;\r\n        return <>\r\n            {openTimezonePopup && <SelectTimeZoneComponent {...this.props} handleAddWatches={this.handleAddWatches} />}\r\n\r\n            <Paper elevation={0} >\r\n                <div className=\"div-header\">\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={8} md={6}>\r\n                            <div className=\"header-title\">Selected Clocks</div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={4} md={6}>\r\n                            <span className=\"setting-icon\">\r\n                                <IconButton aria-label=\"delete\" onClick={this.handleOpenSetting}>\r\n                                    <SettingsIcon />\r\n                                </IconButton>\r\n                            </span>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n                <div className=\"div-selected-watches\">\r\n                    <Grid container spacing={3}>\r\n                        {lodash.map(selectedWatches, itm => {\r\n                            return <Grid item xs={6} md={2}>\r\n                                <Card className=\"\">\r\n                                    <CardActionArea>\r\n                                        <CardContent>\r\n                                            <Typography gutterBottom variant=\"h6\" component=\"h2\">{itm.timeStamp}</Typography>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                {displayTimeZone(itm.zone)}\r\n                                                <span className=\"pull-right\"> <Chip label={itm.timeStampDate} disabled size=\"small\" variant=\"outlined\" /></span>\r\n\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                            </Grid>\r\n                        })}\r\n\r\n                    </Grid>\r\n                </div>\r\n            </Paper>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default WatchListComponent;\r\n","import CacheManager from 'helpers/cache-manager';\r\nimport { DEFAULT_TIMEZONE_LIST, SELECTED_TIMEZONE } from 'helpers/constants';\r\nimport React from \"react\";\r\nimport HourListComponent from './hour-list-component/index';\r\nimport WatchListComponent from './selected-watches-component/index';\r\nclass TimezoneMonitorComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            searchResult: null,\r\n            errorMsg: '',\r\n            selectedWatches: [],\r\n            noRecordFound: false,\r\n            openTimezonePopup: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let addedTimeZones = CacheManager.getItem(SELECTED_TIMEZONE, []);\r\n        if (addedTimeZones.length === 0) {\r\n            addedTimeZones = DEFAULT_TIMEZONE_LIST;\r\n        }\r\n\r\n        this.props.setSelectedTimeZones(addedTimeZones);\r\n    }\r\n\r\n    render() {\r\n        const { errorMsg, } = this.state;\r\n        return (\r\n            <>\r\n                <WatchListComponent {...this.props} />\r\n                <HourListComponent {...this.props} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TimezoneMonitorComponent;\r\n","import { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport TimeZoneActions from \"../actions/timezone-actions\";\r\nimport TimezoneMonitorComponent from \"../components/timezone-component/index\";\r\nconst mapStateToProps = state => {\r\n  return {\r\n    SelectedTimeZones: state.timezoneReducer.SelectedTimeZones,\r\n    selectedTimeZonesChanged: state.timezoneReducer.selectedTimeZonesChanged\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setSelectedTimeZones: (list) => {\r\n    TimeZoneActions.setSelectedTimeZones(list, dispatch);\r\n  }\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(TimezoneMonitorComponent));\r\n","import CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppLayout from 'components/layout-component/index';\r\nimport CustomLoader from 'components/loader-component/index';\r\nimport HomeComponent from 'modules/home/containers/home.container';\r\nimport InfoComponent from 'modules/info/index';\r\nimport TimezoneComponent from 'modules/timezone-monitor/containers/timezone.container';\r\nimport React, { Suspense } from 'react';\r\nimport { Switch } from \"react-router\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\n\r\nexport const AppRoutes = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <HashRouter>\r\n            <Switch>\r\n                <div>\r\n                    <CssBaseline />\r\n                    <AppLayout />\r\n                    <main className=\"main-content\">\r\n                        <div className={classes.appBarSpacer} />\r\n                        <Grid container>\r\n                            <Grid item xs={12} md={12} lg={12}>\r\n                                <Suspense fallback={<CustomLoader />}>\r\n                                    <Route exact path=\"/\" component={HomeComponent} />\r\n                                    <Route exact path=\"/time-zone-monitor\" component={TimezoneComponent} />\r\n                                    <Route path=\"/info\" component={InfoComponent} />\r\n                                </Suspense>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </main>\r\n                </div>\r\n            </Switch>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default AppRoutes;","import React, { Component } from \"react\";\r\nimport './App.css';\r\nimport AppRoutes from './app.routes.js';\r\nimport CustomLoader from './components/loader-component/index';\r\nclass App extends Component {\r\n  render() {\r\n    const { loading } = this.props;\r\n    return (\r\n      <div className=\"App\">\r\n        {loading && <CustomLoader />}\r\n        <AppRoutes />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { connect } from 'react-redux';\r\nimport App from './App';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.commonReducer.loading,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n","import * as type from '../action-types';\r\n\r\nexport const setLoader = (flag) => ({\r\n    type: type.SET_LOADER,\r\n    flag\r\n});\r\n\r\nexport default {\r\n    setLoader\r\n}\r\n","import axios from \"axios\";\r\nimport * as lodash from \"lodash\";\r\nimport commonActions from \"./common.actions\";\r\n\r\nconst SilentRequestURLs = [\r\n  '/v1/gifs/search',\r\n  'silent=1',\r\n];\r\n\r\nconst IgnoreResponseInterceptorForThisList = [\r\n  '/download/'\r\n];\r\n\r\nconst isSilentAPICall = (url) => {\r\n  const isSilentURL = lodash.find(SilentRequestURLs, (itm) => {\r\n    return url.indexOf(itm) > -1;\r\n  });\r\n\r\n  return isSilentURL != null\r\n}\r\n\r\nconst isIgnoreURL = (url) => {\r\n  const isIgnoreURL = lodash.find(IgnoreResponseInterceptorForThisList, (itm) => {\r\n    return url.indexOf(itm) > -1;\r\n  });\r\n\r\n  return isIgnoreURL != null\r\n}\r\n\r\nlet currentRequests = 0;\r\nconst setupInterceptors = store => {\r\n  // Request Interceptor\r\n  axios.interceptors.request.use(config => {\r\n    const isSilectURL = isSilentAPICall(config.url);\r\n    if (!isSilectURL) {\r\n      currentRequests++;\r\n      store.dispatch(commonActions.setLoader(true));\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      config.headers.Authorization = `Token 35fc545ff94ce38457b0e1b126e1cc1c2c65324b`;\r\n      //config.headers.uniquerequestid = utilCommon.generateUUID();\r\n      //config.headers.timezoneoffset = new Date().getTimezoneOffset()\r\n      resolve(config)\r\n    });\r\n\r\n  });\r\n\r\n  // Response Interceptor\r\n  axios.interceptors.response.use(\r\n    response => {\r\n      const isSilectURL = isSilentAPICall(response.config.url);\r\n      if (!isSilectURL) {\r\n        currentRequests--;\r\n        if (currentRequests <= 0) {\r\n          store.dispatch(commonActions.setLoader(false));\r\n        }\r\n      }\r\n\r\n      if (isIgnoreURL(response.config.url)) {\r\n        return response;\r\n      }\r\n\r\n      if (response && response.data) {\r\n        // Strip out )]} string, is response is string. This is done to prevent XSS attacks.\r\n        if (lodash.isString(response.data)) {\r\n          // Parse JSON for security\r\n          let updateData = response.data.replace(\")]}\", \"\");\r\n          response.data = JSON.parse(updateData);\r\n        }\r\n      }\r\n      return response;\r\n    },\r\n    error => {\r\n      currentRequests = 0;\r\n      const status = error.response ? error.response.status : null;\r\n      if (lodash.includes([401, 451], status)) {\r\n        let msg = '';\r\n        switch (status) {\r\n          default: msg = 'Session expired, please login again.';\r\n        }\r\n\r\n        store.dispatch(commonActions.setLoader(false));\r\n        return Promise.reject(error);\r\n      }\r\n\r\n      const isSilectURL = isSilentAPICall(lodash.get(error, 'config.url', ''));\r\n      if (!isSilectURL) {\r\n        store.dispatch(commonActions.setLoader(false));\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n};\r\n\r\nexport default setupInterceptors;\r\n\r\n","import { merge } from 'lodash';\r\n\r\nconst config = {\r\n    all: {\r\n        env: process.env.NODE_ENV || 'development',\r\n        isDev: true,\r\n        basename: process.env.PUBLIC_PATH,\r\n        isBrowser: typeof window !== 'undefined'\r\n    },\r\n    test: {},\r\n    development: {},\r\n    production: {}\r\n};\r\n\r\nexport default merge(config.all, config[config.all.env]);\r\n","import * as type from '../action-types';\r\nconst initialState = {\r\n    loading: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case type.SET_LOADER: return { ...state, loading: action.flag };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as type from \"action-types\";\r\nconst initialState = {\r\n  searchWord: {}\r\n};\r\n\r\nconst homeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case type.SET_SEARCH_WORD: return { ...state, searchWord: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default homeReducer;\r\n","import * as type from \"action-types\";\r\nconst initialState = {\r\n  SelectedTimeZones: [],\r\n  selectedTimeZonesChanged: 0\r\n};\r\n\r\nconst timezoneReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case type.SELECTED_TIMEZONES_CHANGED: return {\r\n      ...state,\r\n      SelectedTimeZones: action.payload,\r\n      selectedTimeZonesChanged: state.selectedTimeZonesChanged + 1\r\n    };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default timezoneReducer;\r\n","import commonReducer from \"helpers/common.reducer\";\r\nimport homeReducer from \"modules/home/reducers/home.reducer\";\r\nimport timezoneReducer from \"modules/timezone-monitor/reducers/timezone.reducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { reducer as form } from \"redux-form\";\r\nimport { i18nReducer } from \"redux-react-i18n\";\r\n\r\n\r\nconst reducers = {\r\n  i18nReducer,\r\n  form,\r\n  commonReducer,\r\n  homeReducer,\r\n  timezoneReducer\r\n};\r\n\r\nexport default combineReducers(reducers);\r\n","import en from './assets/i18n/en';\r\n\r\nexport const translations = {\r\n  'en-US': en\r\n};\r\n","const en = {\r\n\t'2040': { type: 'attention', text: 'The update reason will not be saved as no edits were made.' }\r\n}\r\nexport default en;\r\n","import { compose, createStore } from 'redux';\r\nimport { i18nActions } from 'redux-react-i18n';\r\nimport config from './global/config';\r\nimport reducer from './root-reducer';\r\nimport { translations } from './translations';\r\n\r\n// Check for dev env, if false hide extensions like redux\r\nconst { isDev, isBrowser } = config;\r\nconst devtools = isDev && isBrowser && window.devToolsExtension\r\n    ? window.devToolsExtension\r\n    : () => (fn) => fn;\r\n\r\nconst dictionaries = translations;\r\n\r\nconst languages = [\r\n    {\r\n        code: 'en-US',\r\n        name: 'English (USA)'\r\n    }\r\n];\r\n\r\nlet store = null;\r\n\r\nconst configureStore = (initialState = {}, services = {}) => {\r\n    const enhancers = [devtools()];\r\n    store = createStore(reducer, initialState, compose(...enhancers));\r\n    store.dispatch(i18nActions.setDictionaries(dictionaries));\r\n    store.dispatch(i18nActions.setLanguages(languages));\r\n    store.dispatch(i18nActions.setCurrentLanguage('en-US'));\r\n    return store;\r\n};\r\n\r\nexport { configureStore, store };\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport App from './app.container';\r\nimport setupInterceptors from \"./helpers/interceptor\";\r\nimport './index.css';\r\nimport { configureStore } from \"./store\";\r\n\r\nconst store = configureStore({}, {});\r\nsetupInterceptors(store);\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  // // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}